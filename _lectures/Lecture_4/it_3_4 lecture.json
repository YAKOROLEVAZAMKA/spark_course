{"paragraphs":[{"text":"r%sh\n\nhdfs dfs -ls -h /apps/hive/warehouse/market.db/events/date=2019-11-08","user":"admin","dateUpdated":"2021-11-29T13:08:45+0300","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"WARNING: HADOOP_PREFIX has been replaced by HADOOP_HOME. Using value of HADOOP_PREFIX.\nFound 3 items\n-rw-r--r--   3 zeppelin hadoop     10.5 M 2021-11-15 18:16 /apps/hive/warehouse/market.db/events/date=2019-11-08/part-00003-13d490ed-7497-4c56-aaad-a0563219d1c9.c000.snappy.parquet\n-rw-r--r--   3 zeppelin hadoop     38.2 M 2021-11-15 18:17 /apps/hive/warehouse/market.db/events/date=2019-11-08/part-00009-13d490ed-7497-4c56-aaad-a0563219d1c9.c000.snappy.parquet\n-rw-r--r--   3 zeppelin hadoop     17.8 M 2021-11-15 18:17 /apps/hive/warehouse/market.db/events/date=2019-11-08/part-00013-13d490ed-7497-4c56-aaad-a0563219d1c9.c000.snappy.parquet\n"}]},"apps":[],"jobName":"paragraph_1637856623332_1237183501","id":"20211125-191023_1539924789","dateCreated":"2021-11-25T19:10:23+0300","dateStarted":"2021-11-25T19:12:21+0300","dateFinished":"2021-11-25T19:12:23+0300","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:11230"},{"text":"%conf\n\nspark.executor.memory=512mb","user":"admin","dateUpdated":"2021-11-25T18:57:14+0300","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"text","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/text"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1637855536617_696302791","id":"20211125-185216_1202422258","dateCreated":"2021-11-25T18:52:16+0300","dateStarted":"2021-11-25T18:57:14+0300","dateFinished":"2021-11-25T18:57:14+0300","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:11231"},{"text":"%pyspark\nspark.table(\"hw_4.events_full\").show()","user":"admin","dateUpdated":"2021-11-25T19:24:40+0300","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+--------------------+-------------+--------------------+----------+\n|            event_id|         city|            skew_key|      date|\n+--------------------+-------------+--------------------+----------+\n|160f57d8f91c903a4...|     BIG_CITY|           big_event|2020-11-01|\n|c60620a8b3006a95f...|     BIG_CITY|           big_event|2020-11-01|\n|03566e088ffcb4ed1...|     BIG_CITY|           big_event|2020-11-01|\n|63f8d03bd78d54065...|     BIG_CITY|           big_event|2020-11-01|\n|114ff1c71ffc035ac...|     BIG_CITY|           big_event|2020-11-01|\n|fba645614324c9980...|SMALL_CITY_68|fba645614324c9980...|2020-11-01|\n|dd086b482eaab671f...|     BIG_CITY|           big_event|2020-11-01|\n|102c4804de1fc203c...|     BIG_CITY|           big_event|2020-11-01|\n|757ffed568e15361c...|     BIG_CITY|           big_event|2020-11-01|\n|695481ba15aa73833...|     BIG_CITY|           big_event|2020-11-01|\n|117ee9d724aeafe62...|     BIG_CITY|           big_event|2020-11-01|\n|8a378e72fe6db048b...|     BIG_CITY|           big_event|2020-11-01|\n|bb052cd55b63bffea...|     BIG_CITY|           big_event|2020-11-01|\n|6ce2af39a50aa2d9a...|     BIG_CITY|           big_event|2020-11-01|\n|79bd9ccc5bb1be2ae...|     BIG_CITY|           big_event|2020-11-01|\n|03267fc177584fe84...| SMALL_CITY_1|03267fc177584fe84...|2020-11-01|\n|84de9e33411c59afb...|     BIG_CITY|           big_event|2020-11-01|\n|eb867e9b7f12f584d...|     BIG_CITY|           big_event|2020-11-01|\n|955c37657a67291b0...|     BIG_CITY|           big_event|2020-11-01|\n|a2cde87567c70eaad...|     BIG_CITY|           big_event|2020-11-01|\n+--------------------+-------------+--------------------+----------+\nonly showing top 20 rows\n\n"}]},"apps":[],"jobName":"paragraph_1637857468426_313488809","id":"20211125-192428_636776136","dateCreated":"2021-11-25T19:24:28+0300","dateStarted":"2021-11-25T19:24:41+0300","dateFinished":"2021-11-25T19:24:41+0300","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:11232"},{"text":"spark.table(\"hw_4.events_full\")\n.select(\"event_id\")\n.sample(0.006)\n.repartition(1)\n.write.mode(\"overwrite\")\n.saveAsTable(\"hw_4.sample_big\")","user":"admin","dateUpdated":"2021-11-25T19:03:59+0300","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1637855887457_940567138","id":"20211125-185807_42167770","dateCreated":"2021-11-25T18:58:07+0300","dateStarted":"2021-11-25T18:58:26+0300","dateFinished":"2021-11-25T18:59:25+0300","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:11233"},{"text":"spark.table(\"hw_4.events_full\")\n.select(\"event_id\")\n.sample(0.03)\n.repartition(1)\n.write.mode(\"overwrite\")\n.saveAsTable(\"hw_4.sample_very_big\")","user":"admin","dateUpdated":"2021-11-25T19:04:09+0300","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1637855909722_-1836411884","id":"20211125-185829_208976926","dateCreated":"2021-11-25T18:58:29+0300","dateStarted":"2021-11-25T18:58:43+0300","dateFinished":"2021-11-25T19:00:27+0300","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:11234"},{"text":"%pyspark\n\nsample_very_big_df = spark.table(\"hw_4.sample_very_big\")\nsample_big_df = spark.table(\"hw_4.sample_big\")\n\nsample_very_big_df.join(sample_big_df, \"event_id\", \"leftsemi\").count()","user":"admin","dateUpdated":"2021-11-25T19:25:45+0300","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"26663\n"}]},"apps":[],"jobName":"paragraph_1637855006929_-1021814656","id":"20211125-184326_1665018543","dateCreated":"2021-11-25T18:43:26+0300","dateStarted":"2021-11-25T19:25:24+0300","dateFinished":"2021-11-25T19:25:36+0300","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:11235"},{"text":"%pyspark\n\nspark.table(\"hw_4.sample_very_big\") \\\n.write.mode(\"overwrite\").bucketBy(10, \"event_id\") \\\n.saveAsTable(\"hw_4.sample_very_big_bucket\")\n\n\nspark.table(\"hw_4.sample_big\") \\\n.write.mode(\"overwrite\").bucketBy(10, \"event_id\") \\\n.saveAsTable(\"hw_4.sample_big_bucket\")","user":"admin","dateUpdated":"2021-11-25T19:01:09+0300","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1637855011269_-656547807","id":"20211125-184331_1815644246","dateCreated":"2021-11-25T18:43:31+0300","dateStarted":"2021-11-25T19:01:10+0300","dateFinished":"2021-11-25T19:01:28+0300","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:11236"},{"text":"%sh\n\nhdfs dfs -ls -h /apps/hive/warehouse/hw_4.db/sample_big\n\nhdfs dfs -ls -h /apps/hive/warehouse/hw_4.db/sample_very_big\n\nhdfs dfs -ls -h /apps/hive/warehouse/hw_4.db/sample_very_big_bucket\n","user":"admin","dateUpdated":"2021-11-25T18:58:54+0300","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"sh","editOnDblClick":false,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/sh"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"WARNING: HADOOP_PREFIX has been replaced by HADOOP_HOME. Using value of HADOOP_PREFIX.\nFound 1 items\ndrwxr-xr-x   - zeppelin hadoop          0 2021-11-25 18:58 /apps/hive/warehouse/hw_4.db/sample_big/_temporary\nWARNING: HADOOP_PREFIX has been replaced by HADOOP_HOME. Using value of HADOOP_PREFIX.\nFound 2 items\n-rw-r--r--   3 zeppelin hadoop          0 2021-11-25 18:48 /apps/hive/warehouse/hw_4.db/sample_very_big/_SUCCESS\n-rw-r--r--   3 zeppelin hadoop    136.7 M 2021-11-25 18:48 /apps/hive/warehouse/hw_4.db/sample_very_big/part-00000-292faada-d59e-41ad-bd4d-5d9131ae6420-c000.snappy.parquet\nWARNING: HADOOP_PREFIX has been replaced by HADOOP_HOME. Using value of HADOOP_PREFIX.\nFound 21 items\n-rw-r--r--   3 zeppelin hadoop          0 2021-11-25 18:54 /apps/hive/warehouse/hw_4.db/sample_very_big_bucket/_SUCCESS\n-rw-r--r--   3 zeppelin hadoop     12.8 M 2021-11-25 18:54 /apps/hive/warehouse/hw_4.db/sample_very_big_bucket/part-00000-557a4fe0-66c7-4dd2-8573-19d09a8683d1_00000.c000.snappy.parquet\n-rw-r--r--   3 zeppelin hadoop     12.8 M 2021-11-25 18:54 /apps/hive/warehouse/hw_4.db/sample_very_big_bucket/part-00000-557a4fe0-66c7-4dd2-8573-19d09a8683d1_00001.c000.snappy.parquet\n-rw-r--r--   3 zeppelin hadoop     12.8 M 2021-11-25 18:54 /apps/hive/warehouse/hw_4.db/sample_very_big_bucket/part-00000-557a4fe0-66c7-4dd2-8573-19d09a8683d1_00002.c000.snappy.parquet\n-rw-r--r--   3 zeppelin hadoop     12.8 M 2021-11-25 18:54 /apps/hive/warehouse/hw_4.db/sample_very_big_bucket/part-00000-557a4fe0-66c7-4dd2-8573-19d09a8683d1_00003.c000.snappy.parquet\n-rw-r--r--   3 zeppelin hadoop     12.8 M 2021-11-25 18:54 /apps/hive/warehouse/hw_4.db/sample_very_big_bucket/part-00000-557a4fe0-66c7-4dd2-8573-19d09a8683d1_00004.c000.snappy.parquet\n-rw-r--r--   3 zeppelin hadoop     12.8 M 2021-11-25 18:54 /apps/hive/warehouse/hw_4.db/sample_very_big_bucket/part-00000-557a4fe0-66c7-4dd2-8573-19d09a8683d1_00005.c000.snappy.parquet\n-rw-r--r--   3 zeppelin hadoop     12.9 M 2021-11-25 18:54 /apps/hive/warehouse/hw_4.db/sample_very_big_bucket/part-00000-557a4fe0-66c7-4dd2-8573-19d09a8683d1_00006.c000.snappy.parquet\n-rw-r--r--   3 zeppelin hadoop     12.8 M 2021-11-25 18:54 /apps/hive/warehouse/hw_4.db/sample_very_big_bucket/part-00000-557a4fe0-66c7-4dd2-8573-19d09a8683d1_00007.c000.snappy.parquet\n-rw-r--r--   3 zeppelin hadoop     12.8 M 2021-11-25 18:54 /apps/hive/warehouse/hw_4.db/sample_very_big_bucket/part-00000-557a4fe0-66c7-4dd2-8573-19d09a8683d1_00008.c000.snappy.parquet\n-rw-r--r--   3 zeppelin hadoop     12.8 M 2021-11-25 18:54 /apps/hive/warehouse/hw_4.db/sample_very_big_bucket/part-00000-557a4fe0-66c7-4dd2-8573-19d09a8683d1_00009.c000.snappy.parquet\n-rw-r--r--   3 zeppelin hadoop    886.6 K 2021-11-25 18:54 /apps/hive/warehouse/hw_4.db/sample_very_big_bucket/part-00001-557a4fe0-66c7-4dd2-8573-19d09a8683d1_00000.c000.snappy.parquet\n-rw-r--r--   3 zeppelin hadoop    868.1 K 2021-11-25 18:54 /apps/hive/warehouse/hw_4.db/sample_very_big_bucket/part-00001-557a4fe0-66c7-4dd2-8573-19d09a8683d1_00001.c000.snappy.parquet\n-rw-r--r--   3 zeppelin hadoop    863.8 K 2021-11-25 18:54 /apps/hive/warehouse/hw_4.db/sample_very_big_bucket/part-00001-557a4fe0-66c7-4dd2-8573-19d09a8683d1_00002.c000.snappy.parquet\n-rw-r--r--   3 zeppelin hadoop    878.6 K 2021-11-25 18:54 /apps/hive/warehouse/hw_4.db/sample_very_big_bucket/part-00001-557a4fe0-66c7-4dd2-8573-19d09a8683d1_00003.c000.snappy.parquet\n-rw-r--r--   3 zeppelin hadoop    875.1 K 2021-11-25 18:54 /apps/hive/warehouse/hw_4.db/sample_very_big_bucket/part-00001-557a4fe0-66c7-4dd2-8573-19d09a8683d1_00004.c000.snappy.parquet\n-rw-r--r--   3 zeppelin hadoop    873.5 K 2021-11-25 18:54 /apps/hive/warehouse/hw_4.db/sample_very_big_bucket/part-00001-557a4fe0-66c7-4dd2-8573-19d09a8683d1_00005.c000.snappy.parquet\n-rw-r--r--   3 zeppelin hadoop    877.6 K 2021-11-25 18:54 /apps/hive/warehouse/hw_4.db/sample_very_big_bucket/part-00001-557a4fe0-66c7-4dd2-8573-19d09a8683d1_00006.c000.snappy.parquet\n-rw-r--r--   3 zeppelin hadoop    875.4 K 2021-11-25 18:54 /apps/hive/warehouse/hw_4.db/sample_very_big_bucket/part-00001-557a4fe0-66c7-4dd2-8573-19d09a8683d1_00007.c000.snappy.parquet\n-rw-r--r--   3 zeppelin hadoop    873.2 K 2021-11-25 18:54 /apps/hive/warehouse/hw_4.db/sample_very_big_bucket/part-00001-557a4fe0-66c7-4dd2-8573-19d09a8683d1_00008.c000.snappy.parquet\n-rw-r--r--   3 zeppelin hadoop    863.8 K 2021-11-25 18:54 /apps/hive/warehouse/hw_4.db/sample_very_big_bucket/part-00001-557a4fe0-66c7-4dd2-8573-19d09a8683d1_00009.c000.snappy.parquet\n"}]},"apps":[],"jobName":"paragraph_1637855033668_-1891382532","id":"20211125-184353_2096008152","dateCreated":"2021-11-25T18:43:53+0300","dateStarted":"2021-11-25T18:58:54+0300","dateFinished":"2021-11-25T18:58:58+0300","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:11237"},{"text":"%pyspark\n\nsample_very_big_df = spark.table(\"hw_4.sample_very_big_bucket\")\nsample_big_df = spark.table(\"hw_4.sample_big_bucket\")\n\nsample_very_big_df.join(sample_big_df, \"event_id\", \"leftsemi\").count()\n","user":"admin","dateUpdated":"2021-11-25T19:27:20+0300","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"26663\n"}]},"apps":[],"jobName":"paragraph_1637855442485_-914059622","id":"20211125-185042_729392520","dateCreated":"2021-11-25T18:50:42+0300","dateStarted":"2021-11-25T19:27:21+0300","dateFinished":"2021-11-25T19:27:27+0300","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:11238"},{"title":"Skew data","text":"%pyspark\n\nfrom pyspark.sql.functions import when, lit, col\n\nskew_column = when(col(\"id\") < 900, lit(0)).otherwise(lit(1)).alias(\"skew_column\")\n\nskewed_df = spark.range(1000).withColumn(\"skew\", skew_column).repartition(10, col(\"skew\"))\n\nskewed_df.show()\n","user":"admin","dateUpdated":"2021-11-25T19:46:38+0300","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true,"title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+---+----+\n| id|skew|\n+---+----+\n|  0|   0|\n|  1|   0|\n|  2|   0|\n|  3|   0|\n|  4|   0|\n|  5|   0|\n|  6|   0|\n|  7|   0|\n|  8|   0|\n|  9|   0|\n| 10|   0|\n| 11|   0|\n| 12|   0|\n| 13|   0|\n| 14|   0|\n| 15|   0|\n| 16|   0|\n| 17|   0|\n| 18|   0|\n| 19|   0|\n+---+----+\nonly showing top 20 rows\n\n"}]},"apps":[],"jobName":"paragraph_1637851454675_-869325385","id":"20210426-090911_1410572245","dateCreated":"2021-11-25T17:44:14+0300","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:11239"},{"text":"%pyspark\n\ndef print_parts(df):\n    ret = df.rdd.mapPartitions(lambda x: [len(list(x))]).collect()\n    print(ret)\n    \nprint_parts(skewed_df)","user":"admin","dateUpdated":"2021-11-25T17:44:14+0300","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"[0, 900, 0, 100, 0, 0, 0, 0, 0, 0]\n"}]},"apps":[],"jobName":"paragraph_1637851454677_-77061965","id":"20210426-091015_1835629265","dateCreated":"2021-11-25T17:44:14+0300","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:11240"},{"text":"%pyspark\n# здесь мы передаем только новое количество партиций и Spark выполнит RoundRobinPartitioning\n\nbalanced_df = skewed_df.repartition(11)\nprint_parts(balanced_df)","user":"admin","dateUpdated":"2021-11-25T17:44:14+0300","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"[90, 91, 91, 91, 91, 92, 91, 91, 91, 91, 90]\n"}]},"apps":[],"jobName":"paragraph_1637851454678_2029866338","id":"20210426-092131_1318981423","dateCreated":"2021-11-25T17:44:14+0300","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:11241"},{"text":"%pyspark\n\n# здесь мы добавляем к числу партиций колонку, по которой необходимо сделать репартиционирование,\n# поэтому Spark выполнит HashPartitioning\n\nbalanced_df = skewed_df.repartition(20, col(\"id\"))\nprint_parts(balanced_df)","user":"admin","dateUpdated":"2021-11-25T17:44:14+0300","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"[37, 61, 48, 59, 47, 54, 45, 58, 55, 55, 56, 46, 45, 46, 49, 64, 44, 39, 40, 52]\n"}]},"apps":[],"jobName":"paragraph_1637851454678_1395265809","id":"20210426-092131_911253816","dateCreated":"2021-11-25T17:44:14+0300","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:11242"},{"text":"%md\n\n## Добавление соли\n","user":"admin","dateUpdated":"2021-11-25T17:44:14+0300","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h2>Добавление соли</h2>\n"}]},"apps":[],"jobName":"paragraph_1637851454679_-530111633","id":"20210426-093220_1767643999","dateCreated":"2021-11-25T17:44:14+0300","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:11243"},{"text":"%sh\n\ncurl https://github.com/datasets/airport-codes/raw/master/data/airport-codes.csv  > airport-codes.csv\n\nhdfs dfs -put airport-codes.csv data","user":"admin","dateUpdated":"2021-11-25T17:49:58+0300","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"sh","editOnDblClick":false,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/sh"},"settings":{"params":{},"forms":{}},"results":{"code":"ERROR","msg":[{"type":"TEXT","data":"  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n\r  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0\r100   152  100   152    0     0    481      0 --:--:-- --:--:-- --:--:--   482\nWARNING: HADOOP_PREFIX has been replaced by HADOOP_HOME. Using value of HADOOP_PREFIX.\nput: `data/airport-codes.csv': File exists\n"},{"type":"TEXT","data":"ExitValue: 1"}]},"apps":[],"jobName":"paragraph_1637851630744_2007992342","id":"20211125-174710_2126567655","dateCreated":"2021-11-25T17:47:10+0300","dateStarted":"2021-11-25T17:49:58+0300","dateFinished":"2021-11-25T17:50:03+0300","status":"ERROR","progressUpdateIntervalMs":500,"$$hashKey":"object:11244"},{"text":"%sparkLocal.pyspark\nimport pyspark.sql.functions as f\n\ndf = spark.read.format(\"csv\").options(header=True, inferSchema=True).load(\"data/airport-codes.csv\")\n\ndf.groupBy(f.col(\"type\")).count().orderBy(f.col(\"count\").desc()).show(30, False)\ndf.show()","user":"admin","dateUpdated":"2021-11-25T19:58:39+0300","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"ERROR","msg":[{"type":"TEXT","data":"Fail to execute line 5: df.groupBy(f.col(\"type\")).count().orderBy(f.col(\"count\").desc()).show(30, False)\nTraceback (most recent call last):\n  File \"/tmp/zeppelin_pyspark-7793980327166577126.py\", line 375, in <module>\n    exec(code, _zcUserQueryNameSpace)\n  File \"<stdin>\", line 5, in <module>\n  File \"/usr/lib/spark/python/lib/pyspark.zip/pyspark/sql/group.py\", line 31, in _api\n    jdf = getattr(self._jgd, name)()\n  File \"/usr/lib/spark/python/lib/py4j-0.10.7-src.zip/py4j/java_gateway.py\", line 1257, in __call__\n    answer, self.gateway_client, self.target_id, self.name)\n  File \"/usr/lib/spark/python/lib/pyspark.zip/pyspark/sql/utils.py\", line 69, in deco\n    raise AnalysisException(s.split(': ', 1)[1], stackTrace)\nAnalysisException: u'cannot resolve \\'`type`\\' given input columns: [<html><body>You are being <a href=\"https://raw.githubusercontent.com/datasets/airport-codes/master/data/airport-codes.csv\">redirected</a>.</body></html>];;\\n\\'Aggregate [\\'type], [\\'type, count(1) AS count#86L]\\n+- Relation[<html><body>You are being <a href=\"https://raw.githubusercontent.com/datasets/airport-codes/master/data/airport-codes.csv\">redirected</a>.</body></html>#82] csv\\n'\n"}]},"apps":[],"jobName":"paragraph_1637851454680_-1628646103","id":"20210426-093218_1141916285","dateCreated":"2021-11-25T17:44:14+0300","dateStarted":"2021-11-25T19:58:39+0300","dateFinished":"2021-11-25T19:58:39+0300","status":"ERROR","progressUpdateIntervalMs":500,"$$hashKey":"object:11245"},{"text":"%pyspark\nfrom pyspark.sql.functions import collect_list, col\n\nskew_grouped = df.groupBy(col(\"type\")).agg(collect_list(col(\"ident\")).alias(\"ids\"))\nskew_grouped.show(20, 100)","user":"admin","dateUpdated":"2021-11-25T17:44:14+0300","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+--------------+----------------------------------------------------------------------------------------------------+\n|          type|                                                                                                 ids|\n+--------------+----------------------------------------------------------------------------------------------------+\n| large_airport|[AYPY, BIKF, BKPR, CN-0083, CYEG, CYHZ, CYOW, CYUL, CYVR, CYWG, CYYC, CYYJ, CYYT, CYYZ, DAAG, DFF...|\n|   balloonport|[12JY, 13M, 28NC, 2JY7, 35JY, 4OH6, 55NJ, 59ID, 5KS0, AR-0136, BE-0012, CO28, DE-0351, FR-0354, G...|\n| seaplane_base|[00NK, 01MD, 01ME, 01MN, 02NH, 03AK, 03M, 04IN, 05B, 06B, 06I, 07I, 07NH, 08AL, 08CT, 08IN, 08MN,...|\n|      heliport|[00A, 00CN, 00FD, 00GE, 00HI, 00II, 00IN, 00LA, 00LL, 00MI, 00NJ, 00OI, 00OR, 00PA, 00TE, 00WY, 0...|\n|        closed|[00AR, 00CO, 00MT, 00OH, 00PS, 00TA, 00TX, 00UT, 01C, 01NY, 01OK, 01OR, 01PA, 01TS, 02AR, 02AZ, 0...|\n|medium_airport|[5A8, AF-0005, AGGH, AGGM, AHJ, ANYN, AXF, AYBK, AYCH, AYDU, AYGA, AYGN, AYGR, AYHK, AYKM, AYKV, ...|\n| small_airport|[00AA, 00AK, 00AL, 00AS, 00AZ, 00CA, 00CL, 00FA, 00FL, 00GA, 00ID, 00IG, 00IL, 00IS, 00KS, 00KY, ...|\n+--------------+----------------------------------------------------------------------------------------------------+\n\n7\n"}]},"apps":[],"jobName":"paragraph_1637851454681_820088291","id":"20210426-093218_1383470336","dateCreated":"2021-11-25T17:44:14+0300","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:11246"},{"text":"%md\n\nПоскольку при вычислении агрегата происходит неявный HashPartitioning по ключу (ключам) агрегата, то при выполнении определенных условий происходит нехватка памяти на воркере, которую нельзя исправить, не изменив подход к построению агрегата.\n\nОдин из вариантов устранение - соление ключей:\n\n","user":"admin","dateUpdated":"2021-11-25T17:44:58+0300","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<p>Поскольку при вычислении агрегата происходит неявный HashPartitioning по ключу (ключам) агрегата, то при выполнении определенных условий происходит нехватка памяти на воркере, которую нельзя исправить, не изменив подход к построению агрегата.</p>\n<p>Один из вариантов устранение - соление ключей:</p>\n"}]},"apps":[],"jobName":"paragraph_1637851454682_-722468277","id":"20210426-093638_422670218","dateCreated":"2021-11-25T17:44:14+0300","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:11247"},{"text":"%pyspark\nfrom pyspark.sql.functions import expr\n\nsalt = expr(\"\"\"pmod(round(rand() * 100, 0), 10)\"\"\").cast(\"integer\")\nsalted = df.withColumn(\"salt\", salt)\nsalted.select(col(\"type\"), col(\"ident\"), col(\"salt\")).sample(0.1).show(20, False)","user":"admin","dateUpdated":"2021-11-25T17:44:14+0300","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+-------------+-----+----+\n|type         |ident|salt|\n+-------------+-----+----+\n|heliport     |00IN |7   |\n|small_airport|00MN |3   |\n|small_airport|00MO |3   |\n|small_airport|00NC |9   |\n|heliport     |00NJ |4   |\n|small_airport|00VA |1   |\n|heliport     |00WY |5   |\n|small_airport|00XS |1   |\n|small_airport|01A  |4   |\n|heliport     |01AR |6   |\n|small_airport|01LL |1   |\n|small_airport|01LS |4   |\n|small_airport|01UT |5   |\n|heliport     |01XS |2   |\n|heliport     |02CA |5   |\n|small_airport|02KS |9   |\n|small_airport|02MO |7   |\n|closed       |02MU |9   |\n|small_airport|02OR |0   |\n|heliport     |02P  |2   |\n+-------------+-----+----+\nonly showing top 20 rows\n\n"}]},"apps":[],"jobName":"paragraph_1637851454683_-1881537488","id":"20210426-093218_1438770722","dateCreated":"2021-11-25T17:44:14+0300","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:11248"},{"text":"%md\n\nЭто позволяет нам существенно снизить объем данных в каждой партиции (30к vs 3к):\n","user":"admin","dateUpdated":"2021-11-25T17:44:14+0300","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<p>Это позволяет нам существенно снизить объем данных в каждой партиции (30к vs 3к):</p>\n"}]},"apps":[],"jobName":"paragraph_1637851454683_431684840","id":"20210426-093706_889885794","dateCreated":"2021-11-25T17:44:14+0300","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:11249"},{"text":"%pyspark\n\nsalted.groupBy(col(\"type\"), col(\"salt\")).count().orderBy(col(\"count\").desc()).show(20, False)\n","user":"admin","dateUpdated":"2021-11-25T20:04:40+0300","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+-------------+----+-----+\n|type         |salt|count|\n+-------------+----+-----+\n|small_airport|9   |3583 |\n|small_airport|5   |3524 |\n|small_airport|7   |3519 |\n|small_airport|1   |3516 |\n|small_airport|0   |3485 |\n|small_airport|8   |3467 |\n|small_airport|4   |3461 |\n|small_airport|6   |3421 |\n|small_airport|2   |3416 |\n|small_airport|3   |3416 |\n|heliport     |7   |1254 |\n|heliport     |0   |1251 |\n|heliport     |5   |1249 |\n|heliport     |3   |1212 |\n|heliport     |6   |1190 |\n|heliport     |9   |1185 |\n|heliport     |1   |1179 |\n|heliport     |4   |1175 |\n|heliport     |2   |1168 |\n|heliport     |8   |1165 |\n+-------------+----+-----+\nonly showing top 20 rows\n\n"}]},"apps":[],"jobName":"paragraph_1637851454684_851358318","id":"20210426-093218_372291157","dateCreated":"2021-11-25T17:44:14+0300","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:11250"},{"text":"%md\nЭто позволяет нам посчитать требуемый агрегат более оптимальным путем, не смотря на появление второго агрегата:\n","user":"admin","dateUpdated":"2021-11-25T17:44:14+0300","config":{"tableHide":true,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":false,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<p>Это позволяет нам посчитать требуемый агрегат более оптимальным путем, не смотря на появление второго агрегата:</p>\n"}]},"apps":[],"jobName":"paragraph_1637851454685_-1807561332","id":"20210426-093715_527447183","dateCreated":"2021-11-25T17:44:14+0300","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:11251"},{"text":"%pyspark\n\nsalted \\\n    .groupBy(col(\"type\"), col(\"salt\")).agg(collect_list(col(\"ident\")).alias(\"ids\")) \\\n    .groupBy(col(\"type\")).agg(collect_list(col(\"ids\")).alias(\"ids\")) \\\n    .show(20, 100)","user":"admin","dateUpdated":"2021-11-25T17:44:14+0300","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+--------------+----------------------------------------------------------------------------------------------------+\n|          type|                                                                                                 ids|\n+--------------+----------------------------------------------------------------------------------------------------+\n| large_airport|[[EBBR, EBLG, EDDK, EDDP, EGCN, EGGD, EGSH, EICK, EIDW, FLLS, FMMI, GVAC, KAMA, KBMI, KCLT, KDEN,...|\n|   balloonport|[[59ID, GB-0609, JY42, RI16], [2JY7, 35JY], [13M, 55NJ, MA26], [28NC], [AR-0136, JY03], [12JY, 4O...|\n| seaplane_base|[[03M, 07I, 07NH, 0G5, 0O0, 16NH, 16NJ, 16WI, 1WI5, 21H, 29LS, 2NK0, 2VT2, 2Z6, 35NH, 39B, 4A3, 4...|\n|      heliport|[[00MI, 01FD, 01WN, 02KT, 02KY, 02VG, 03LS, 04FD, 04LA, 04OK, 06LA, 09AA, 09KY, 09OR, 0AR5, 0AR8,...|\n|        closed|[[00CO, 01C, 01OK, 01PA, 02MT, 02MU, 0CO3, 0LS4, 0MA8, 0NK5, 0S2, 13SC, 16TX, 18TS, 1AR4, 1CA2, 1...|\n|medium_airport|[[5A8, AYKM, AYNZ, BG-JAM, BIHU, BIRK, BR-0569, BY-0006, BZ-CZH, BZ-PND, CN-0015, CN-0091, CN-013...|\n| small_airport|[[00KS, 00NC, 00PN, 00W, 01AL, 01IA, 01II, 01NV, 02ID, 02KS, 02ME, 02SC, 02TX, 03IL, 03S, 04IA, 0...|\n+--------------+----------------------------------------------------------------------------------------------------+\n\n"}]},"apps":[],"jobName":"paragraph_1637851454686_-977178171","id":"20210426-093714_168136897","dateCreated":"2021-11-25T17:44:14+0300","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:11252"},{"text":"%md\n\n##  Кеширование\nПо умолчанию при применении каждого действия Spark пересчитывает весь граф, что может негативно сказать на производительности приложения. Для демонстрации возьмем датасет Airport Codes\nПосчитаем несколько действий. Несмотря на то, что only_ru является общим для всех действий, он пересчитывается при вызове каждого действия.","user":"admin","dateUpdated":"2021-11-25T17:45:10+0300","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h2>Кеширование</h2>\n<p>По умолчанию при применении каждого действия Spark пересчитывает весь граф, что может негативно сказать на производительности приложения. Для демонстрации возьмем датасет Airport Codes\n<br  />Посчитаем несколько действий. Несмотря на то, что only_ru является общим для всех действий, он пересчитывается при вызове каждого действия.</p>\n"}]},"apps":[],"jobName":"paragraph_1637851454687_-733002032","id":"20210426-094015_1744321217","dateCreated":"2021-11-25T17:44:14+0300","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:11253"},{"text":"%pyspark\nonly_ru = df.filter((col(\"iso_country\") == \"RU\") & (col(\"elevation_ft\") > 1000))\nonly_ru.show(1, 50, True)\n\nonly_ru.count()\nonly_ru.collect()\nonly_ru.groupBy(col(\"municipality\")).count().orderBy(col(\"count\").desc()).na.drop(\"any\").show()","user":"admin","dateUpdated":"2021-11-25T17:44:14+0300","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"-RECORD 0-----------------------------\n ident        | RU-0006               \n type         | closed                \n name         | Arabatuk Air Base     \n elevation_ft | 2280                  \n continent    | EU                    \n iso_country  | RU                    \n iso_region   | RU-CHI                \n municipality | Daurija               \n gps_code     | null                  \n iata_code    | null                  \n local_code   | ZA2N                  \n coordinates  | 117.098999, 50.223801 \nonly showing top 1 row\n\n+---------------+-----+\n|   municipality|count|\n+---------------+-----+\n|          Chita|    3|\n|   Nizhneudinsk|    2|\n|       Ulan Ude|    2|\n|  Nizhneangarsk|    2|\n|        Irkutsk|    2|\n|         Borzya|    2|\n|Severo-Eniseysk|    1|\n|        Chistyy|    1|\n|          Kular|    1|\n|       Barguzin|    1|\n|           Tura|    1|\n|          Baley|    1|\n|       Tlyarata|    1|\n|Sherlovaya Gora|    1|\n|     Akkem Lake|    1|\n|          Kyren|    1|\n|    Olovyannaya|    1|\n|  Kazachinskaya|    1|\n|     Ust-Ilimsk|    1|\n|   Novokuznetsk|    1|\n+---------------+-----+\nonly showing top 20 rows\n\n"}]},"apps":[],"jobName":"paragraph_1637851454688_652099779","id":"20210426-094014_1283225047","dateCreated":"2021-11-25T17:44:14+0300","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:11254"},{"text":"%md\n\nДля решения этой проблемы следует использовать методы cache, либо persist. Данные методы сохраняют состояние графа после первого действия, и следующие обращаются к нему. Разница между методами заключается в том, что persist позволяет выбрать, куда сохранить данные, а cache использует значение по умолчанию. В текущей версии Spark это StorageLevel.MEMORY_ONLY. Важно помнить, что данный кеш не предназначен для обмена данными между разными Spark приложения - он является внутренним для приложения. После того, как работа с данными окончена, необходимо выполнить unpersist для очистки памяти\n","user":"admin","dateUpdated":"2021-11-25T17:44:14+0300","config":{"tableHide":true,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":false,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<p>Для решения этой проблемы следует использовать методы cache, либо persist. Данные методы сохраняют состояние графа после первого действия, и следующие обращаются к нему. Разница между методами заключается в том, что persist позволяет выбрать, куда сохранить данные, а cache использует значение по умолчанию. В текущей версии Spark это StorageLevel.MEMORY_ONLY. Важно помнить, что данный кеш не предназначен для обмена данными между разными Spark приложения - он является внутренним для приложения. После того, как работа с данными окончена, необходимо выполнить unpersist для очистки памяти</p>\n"}]},"apps":[],"jobName":"paragraph_1637851454689_900827413","id":"20210426-094104_2032692158","dateCreated":"2021-11-25T17:44:14+0300","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:11255"},{"text":"%pyspark\nonly_ru = df.filter((col(\"iso_country\") == \"RU\") & (col(\"elevation_ft\") > 1000))\nonly_ru.cache()\nonly_ru.show(1, 50, True)\nonly_ru.count()\nonly_ru.collect()\nonly_ru.groupBy(col(\"municipality\")).count().orderBy(col(\"count\").desc()).na.drop(\"any\").show()\n# only_ru.unpersist()","user":"admin","dateUpdated":"2021-11-25T17:44:14+0300","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"-RECORD 0-----------------------------\n ident        | RU-0006               \n type         | closed                \n name         | Arabatuk Air Base     \n elevation_ft | 2280                  \n continent    | EU                    \n iso_country  | RU                    \n iso_region   | RU-CHI                \n municipality | Daurija               \n gps_code     | null                  \n iata_code    | null                  \n local_code   | ZA2N                  \n coordinates  | 117.098999, 50.223801 \nonly showing top 1 row\n\n+-----------------+-----+\n|     municipality|count|\n+-----------------+-----+\n|            Chita|    3|\n|     Nizhneudinsk|    2|\n|         Ulan Ude|    2|\n|    Nizhneangarsk|    2|\n|          Irkutsk|    2|\n|           Borzya|    2|\n|  Severo-Eniseysk|    1|\n|          Chistyy|    1|\n|     Karachayevsk|    1|\n|         Barguzin|    1|\n|Usolye-Sibirskoye|    1|\n|           Amazar|    1|\n|            Baley|    1|\n|     Snezhnogorsk|    1|\n|       Akkem Lake|    1|\n|            Kyren|    1|\n|       Ust-Ilimsk|    1|\n|      Olovyannaya|    1|\n|    Kazachinskaya|    1|\n|     Novokuznetsk|    1|\n+-----------------+-----+\nonly showing top 20 rows\n\n"}]},"apps":[],"jobName":"paragraph_1637851454689_-2030220665","id":"20210426-093714_155419938","dateCreated":"2021-11-25T17:44:14+0300","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:11256"},{"text":"%pyspark\n\nonly_ru.groupBy(col(\"municipality\")).count().orderBy(col(\"count\").desc()).na.drop(\"any\").show()","user":"admin","dateUpdated":"2021-11-25T17:44:14+0300","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+-----------------+-----+\n|     municipality|count|\n+-----------------+-----+\n|            Chita|    3|\n|     Nizhneudinsk|    2|\n|         Ulan Ude|    2|\n|    Nizhneangarsk|    2|\n|          Irkutsk|    2|\n|           Borzya|    2|\n|  Severo-Eniseysk|    1|\n|          Chistyy|    1|\n|     Karachayevsk|    1|\n|         Barguzin|    1|\n|Usolye-Sibirskoye|    1|\n|           Amazar|    1|\n|            Baley|    1|\n|     Snezhnogorsk|    1|\n|       Akkem Lake|    1|\n|            Kyren|    1|\n|       Ust-Ilimsk|    1|\n|      Olovyannaya|    1|\n|    Kazachinskaya|    1|\n|     Novokuznetsk|    1|\n+-----------------+-----+\nonly showing top 20 rows\n\n"}]},"apps":[],"jobName":"paragraph_1637851454690_-1222769777","id":"20210426-112144_1463308831","dateCreated":"2021-11-25T17:44:14+0300","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:11257"},{"text":"%md\n## Планы выполнения задач\n\nЛюбой job в Spark SQL имеет под собой план выполнения, кототорый генерируется на основе написанно запроса. План запроса содержит операторы, которые затем превращаются в Java код. Поскольку одну и ту же задачу в Spark SQL можно выполнить по-разному, полезно смотреть в планы выполнения, чтобы, например:\n\n    убрать лишние shuffle\n    убедиться, чтот тот или иной оператор будет выполнен на уровне источника, а не внутри Spark\n    понять, как будет выполнен join\n\nПланы выполнения доступны в двух видах:\n\n    метод explain() у DF\n    на вкладке SQL в Spark UI\n\n","user":"admin","dateUpdated":"2021-11-25T20:05:33+0300","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h2>Планы выполнения задач</h2>\n<p>Любой job в Spark SQL имеет под собой план выполнения, кототорый генерируется на основе написанно запроса. План запроса содержит операторы, которые затем превращаются в Java код. Поскольку одну и ту же задачу в Spark SQL можно выполнить по-разному, полезно смотреть в планы выполнения, чтобы, например:</p>\n<pre><code>убрать лишние shuffle\nубедиться, чтот тот или иной оператор будет выполнен на уровне источника, а не внутри Spark\nпонять, как будет выполнен join\n</code></pre>\n<p>Планы выполнения доступны в двух видах:</p>\n<pre><code>метод explain() у DF\nна вкладке SQL в Spark UI\n</code></pre>\n"}]},"apps":[],"jobName":"paragraph_1637851454691_43521391","id":"20210426-094212_194184534","dateCreated":"2021-11-25T17:44:14+0300","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:11258"},{"text":"%pyspark\nfrom pyspark.sql.functions import col\n\ndf.filter(col(\"type\") == \"small_airport\").explain(extended=True)","user":"admin","dateUpdated":"2021-11-25T17:44:14+0300","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"== Parsed Logical Plan ==\n'Filter ('type = small_airport)\n+- AnalysisBarrier\n      +- Relation[ident#145,type#146,name#147,elevation_ft#148,continent#149,iso_country#150,iso_region#151,municipality#152,gps_code#153,iata_code#154,local_code#155,coordinates#156] csv\n\n== Analyzed Logical Plan ==\nident: string, type: string, name: string, elevation_ft: int, continent: string, iso_country: string, iso_region: string, municipality: string, gps_code: string, iata_code: string, local_code: string, coordinates: string\nFilter (type#146 = small_airport)\n+- Relation[ident#145,type#146,name#147,elevation_ft#148,continent#149,iso_country#150,iso_region#151,municipality#152,gps_code#153,iata_code#154,local_code#155,coordinates#156] csv\n\n== Optimized Logical Plan ==\nFilter (isnotnull(type#146) && (type#146 = small_airport))\n+- Relation[ident#145,type#146,name#147,elevation_ft#148,continent#149,iso_country#150,iso_region#151,municipality#152,gps_code#153,iata_code#154,local_code#155,coordinates#156] csv\n\n== Physical Plan ==\n*(1) Project [ident#145, type#146, name#147, elevation_ft#148, continent#149, iso_country#150, iso_region#151, municipality#152, gps_code#153, iata_code#154, local_code#155, coordinates#156]\n+- *(1) Filter (isnotnull(type#146) && (type#146 = small_airport))\n   +- *(1) FileScan csv [ident#145,type#146,name#147,elevation_ft#148,continent#149,iso_country#150,iso_region#151,municipality#152,gps_code#153,iata_code#154,local_code#155,coordinates#156] Batched: false, Format: CSV, Location: InMemoryFileIndex[hdfs://bigdataanalytics2-head-shdpt-v31-1-0.novalocal:8020/datasets/airport-cod..., PartitionFilters: [], PushedFilters: [IsNotNull(type), EqualTo(type,small_airport)], ReadSchema: struct<ident:string,type:string,name:string,elevation_ft:int,continent:string,iso_country:string,...\n"}]},"apps":[],"jobName":"paragraph_1637851454692_1349101105","id":"20210426-094117_1222120966","dateCreated":"2021-11-25T17:44:14+0300","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:11259"},{"text":"%md\nВыполним агрегацию и проверим план выполнения. В нем появляется три оператора: 2 HashAggregate и Exchange hashpartitioning.\n\nПервый HashAggregate содержит функцию partial_count(1). Это означает, что внутри каждого воркера произойдет подсчет строк по каждому ключу. Затем происходит shuffle по ключу агрегата, после которого выполняется еще один HashAggregate с функцией count(1). Использование двух HashAggregate позволяет сократить количество передаваемых данных по сети.\n\n","user":"admin","dateUpdated":"2021-11-25T17:44:14+0300","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":false,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<p>Выполним агрегацию и проверим план выполнения. В нем появляется три оператора: 2 HashAggregate и Exchange hashpartitioning.</p>\n<p>Первый HashAggregate содержит функцию partial_count(1). Это означает, что внутри каждого воркера произойдет подсчет строк по каждому ключу. Затем происходит shuffle по ключу агрегата, после которого выполняется еще один HashAggregate с функцией count(1). Использование двух HashAggregate позволяет сократить количество передаваемых данных по сети.</p>\n"}]},"apps":[],"jobName":"paragraph_1637851454693_1721220314","id":"20210426-094332_1560890569","dateCreated":"2021-11-25T17:44:14+0300","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:11260"},{"text":"%pyspark\nfrom pyspark.sql.functions import col\n\ndf.filter(col(\"type\") == \"small_airport\").groupBy(col(\"iso_country\")).count().explain()","user":"admin","dateUpdated":"2021-11-25T17:44:14+0300","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"== Physical Plan ==\n*(2) HashAggregate(keys=[iso_country#1836], functions=[count(1)])\n+- Exchange hashpartitioning(iso_country#1836, 200)\n   +- *(1) HashAggregate(keys=[iso_country#1836], functions=[partial_count(1)])\n      +- *(1) Project [iso_country#1836]\n         +- *(1) Filter (isnotnull(type#1832) && (type#1832 = small_airport))\n            +- *(1) FileScan csv [type#1832,iso_country#1836] Batched: false, Format: CSV, Location: InMemoryFileIndex[hdfs://bigdataanalytics2-head-shdpt-v31-1-0.novalocal:8020/datasets/airport-cod..., PartitionFilters: [], PushedFilters: [IsNotNull(type), EqualTo(type,small_airport)], ReadSchema: struct<type:string,iso_country:string>\n"}]},"apps":[],"jobName":"paragraph_1637851454693_-1759030013","id":"20210426-094117_2094192633","dateCreated":"2021-11-25T17:44:14+0300","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:11261"},{"text":"%md\n\n## Оптимизация соединений и группировок\n\nПри выполнении join двух DF важно следовать рекомендациям:\n\n- фильтровать данные до join'а\n- использовать equ join\n- если можно путем увеличения количества данных применить equ join вместо non-equ join'а, то делать именно так\n- всеми силами избегать cross-join'ов\n- если правый DF помещается в памяти worker'а, использовать broadcast()\n\nВиды джойнов\n\n- BroadcastHashJoin\n-- equ join\n-- broadcast\n- SortMergeJoin\n-- equ join\n-- sortable keys\n- BroadcastNestedLoopJoin\n-- non-equ join\n-- using broadcast\n- CartesianProduct\n-- non-equ join\n\n","user":"admin","dateUpdated":"2021-11-25T20:06:54+0300","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>Оптимизация соединений и группировок</h2>\n<p>При выполнении join двух DF важно следовать рекомендациям:</p>\n<ul>\n  <li>фильтровать данные до join&rsquo;а</li>\n  <li>использовать equ join</li>\n  <li>если можно путем увеличения количества данных применить equ join вместо non-equ join&rsquo;а, то делать именно так</li>\n  <li>всеми силами избегать cross-join&rsquo;ов</li>\n  <li>если правый DF помещается в памяти worker&rsquo;а, использовать broadcast()</li>\n</ul>\n<p>Виды джойнов</p>\n<ul>\n  <li>BroadcastHashJoin<br/>&ndash; equ join<br/>&ndash; broadcast</li>\n  <li>SortMergeJoin<br/>&ndash; equ join<br/>&ndash; sortable keys</li>\n  <li>BroadcastNestedLoopJoin<br/>&ndash; non-equ join<br/>&ndash; using broadcast</li>\n  <li>CartesianProduct<br/>&ndash; non-equ join</li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1637851454694_-104357597","id":"20210426-094842_1791938774","dateCreated":"2021-11-25T17:44:14+0300","dateStarted":"2021-11-25T20:06:54+0300","dateFinished":"2021-11-25T20:06:54+0300","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:11262"},{"text":"%pyspark\n\ndf.show()\n","user":"admin","dateUpdated":"2021-11-25T17:44:14+0300","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+-----+-------------+--------------------+------------+---------+-----------+----------+------------+--------+---------+----------+--------------------+\n|ident|         type|                name|elevation_ft|continent|iso_country|iso_region|municipality|gps_code|iata_code|local_code|         coordinates|\n+-----+-------------+--------------------+------------+---------+-----------+----------+------------+--------+---------+----------+--------------------+\n|  00A|     heliport|   Total Rf Heliport|          11|       NA|         US|     US-PA|    Bensalem|     00A|     null|       00A|-74.9336013793945...|\n| 00AA|small_airport|Aero B Ranch Airport|        3435|       NA|         US|     US-KS|       Leoti|    00AA|     null|      00AA|-101.473911, 38.7...|\n| 00AK|small_airport|        Lowell Field|         450|       NA|         US|     US-AK|Anchor Point|    00AK|     null|      00AK|-151.695999146, 5...|\n| 00AL|small_airport|        Epps Airpark|         820|       NA|         US|     US-AL|     Harvest|    00AL|     null|      00AL|-86.7703018188476...|\n| 00AR|       closed|Newport Hospital ...|         237|       NA|         US|     US-AR|     Newport|    null|     null|      null| -91.254898, 35.6087|\n| 00AS|small_airport|      Fulton Airport|        1100|       NA|         US|     US-OK|        Alex|    00AS|     null|      00AS|-97.8180194, 34.9...|\n| 00AZ|small_airport|      Cordes Airport|        3810|       NA|         US|     US-AZ|      Cordes|    00AZ|     null|      00AZ|-112.165000915527...|\n| 00CA|small_airport|Goldstone /Gts/ A...|        3038|       NA|         US|     US-CA|     Barstow|    00CA|     null|      00CA|-116.888000488, 3...|\n| 00CL|small_airport| Williams Ag Airport|          87|       NA|         US|     US-CA|       Biggs|    00CL|     null|      00CL|-121.763427, 39.4...|\n| 00CN|     heliport|Kitchen Creek Hel...|        3350|       NA|         US|     US-CA| Pine Valley|    00CN|     null|      00CN|-116.4597417, 32....|\n| 00CO|       closed|          Cass Field|        4830|       NA|         US|     US-CO|  Briggsdale|    null|     null|      null|-104.344002, 40.6...|\n| 00FA|small_airport| Grass Patch Airport|          53|       NA|         US|     US-FL|    Bushnell|    00FA|     null|      00FA|-82.2190017700195...|\n| 00FD|     heliport|  Ringhaver Heliport|          25|       NA|         US|     US-FL|   Riverview|    00FD|     null|      00FD|-82.3453979492187...|\n| 00FL|small_airport|   River Oak Airport|          35|       NA|         US|     US-FL|  Okeechobee|    00FL|     null|      00FL|-80.9692001342773...|\n| 00GA|small_airport|    Lt World Airport|         700|       NA|         US|     US-GA|    Lithonia|    00GA|     null|      00GA|-84.0682983398437...|\n| 00GE|     heliport|    Caffrey Heliport|         957|       NA|         US|     US-GA|       Hiram|    00GE|     null|      00GE|-84.7339019775390...|\n| 00HI|     heliport|  Kaupulehu Heliport|          43|       NA|         US|     US-HI| Kailua-Kona|    00HI|     null|      00HI|-155.980233, 19.8...|\n| 00ID|small_airport|Delta Shores Airport|        2064|       NA|         US|     US-ID|  Clark Fork|    00ID|     null|      00ID|-116.213996887207...|\n| 00IG|small_airport|       Goltl Airport|        3359|       NA|         US|     US-KS|    McDonald|    00IG|     null|      00IG|-101.395994, 39.7...|\n| 00II|     heliport|Bailey Generation...|         600|       NA|         US|     US-IN|  Chesterton|    00II|     null|      00II|-87.122802734375,...|\n+-----+-------------+--------------------+------------+---------+-----------+----------+------------+--------+---------+----------+--------------------+\nonly showing top 20 rows\n\n"}]},"apps":[],"jobName":"paragraph_1637851454695_1027726221","id":"20210518-180639_1038202240","dateCreated":"2021-11-25T17:44:14+0300","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:11263"},{"text":"%pyspark\nleft = df.select(col(\"type\"), col(\"ident\"), col(\"iso_country\")).alias(\"left\").localCheckpoint()\nright = df.groupBy(col(\"type\")).count().alias(\"right\").localCheckpoint()","user":"admin","dateUpdated":"2021-11-25T17:44:14+0300","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1637851454696_-1875266506","id":"20210426-094831_721273607","dateCreated":"2021-11-25T17:44:14+0300","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:11264"},{"text":"%md\n\nBroadcastHashJoin¶\n\n- работает, когда условие - равенство одного или нескольких ключей\n- работает, когда один из датасетов небольшой и полностью вмещается в память воркера\n- оставляет левый датасет как есть\n- копирует правый датасет на каждый воркер\n- составляет hash map из правого датасета, где ключ - кортеж из колонок в условии соединения\n- итерируется по левому датасета внутри каждой партиции и проверяет наличие ключей в HashMap\n- может быть автоматически использован, либо явно через broadcast(df)","user":"admin","dateUpdated":"2021-11-25T17:53:17+0300","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<p>BroadcastHashJoin¶</p>\n<ul>\n<li>работает, когда условие - равенство одного или нескольких ключей</li>\n<li>работает, когда один из датасетов небольшой и полностью вмещается в память воркера</li>\n<li>оставляет левый датасет как есть</li>\n<li>копирует правый датасет на каждый воркер</li>\n<li>составляет hash map из правого датасета, где ключ - кортеж из колонок в условии соединения</li>\n<li>итерируется по левому датасета внутри каждой партиции и проверяет наличие ключей в HashMap</li>\n<li>может быть автоматически использован, либо явно через broadcast(df)</li>\n</ul>\n"}]},"apps":[],"jobName":"paragraph_1637851454697_-983116536","id":"20210426-100216_170372658","dateCreated":"2021-11-25T17:44:14+0300","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:11265"},{"text":"%pyspark\nfrom pyspark.sql.functions import broadcast\n\nresult = left.join(broadcast(right), \"type\", \"inner\")\n# result = left.join(right, \"type\", \"inner\")\n\nresult.explain()\n","user":"admin","dateUpdated":"2021-11-25T17:44:14+0300","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"== Physical Plan ==\n*(2) Project [type#41, ident#40, iso_country#45, count#837L]\n+- *(2) BroadcastHashJoin [type#41], [type#836], Inner, BuildRight\n   :- *(2) Filter isnotnull(type#41)\n   :  +- Scan ExistingRDD[type#41,ident#40,iso_country#45]\n   +- BroadcastExchange HashedRelationBroadcastMode(ArrayBuffer(input[0, string, false]))\n      +- *(1) Filter isnotnull(type#836)\n         +- Scan ExistingRDD[type#836,count#837L]\n"}]},"apps":[],"jobName":"paragraph_1637851454712_-1944656755","id":"20210426-094117_1339966057","dateCreated":"2021-11-25T17:44:14+0300","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:11266"},{"text":"%md\n### SortMergeJoin\n+ работает, когда ключи соединения в обоих датасета являются сортируемыми\n+ репартиционирует оба датасета в 200 партиций по ключу (ключам) соединения\n+ сортирует партиции каждого из датасетов по ключу (ключам) соединения\n+ Используя сравнение левого и правого ключей, обходит каждую пару партиций и соединяет строки с одинаковыми ключами\n","user":"admin","dateUpdated":"2021-11-25T17:44:14+0300","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":false,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h3>SortMergeJoin</h3>\n<ul>\n<li>работает, когда ключи соединения в обоих датасета являются сортируемыми</li>\n<li>репартиционирует оба датасета в 200 партиций по ключу (ключам) соединения</li>\n<li>сортирует партиции каждого из датасетов по ключу (ключам) соединения</li>\n<li>Используя сравнение левого и правого ключей, обходит каждую пару партиций и соединяет строки с одинаковыми ключами</li>\n</ul>\n"}]},"apps":[],"jobName":"paragraph_1637851454713_-1331651019","id":"20210426-100834_1616990896","dateCreated":"2021-11-25T17:44:14+0300","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:11267"},{"text":"%pyspark\nspark.conf.set(\"spark.sql.autoBroadcastJoinThreshold\", \"-1\")\n\nresult = left.join(right, \"type\", \"inner\")\n\nresult.explain()","user":"admin","dateUpdated":"2021-11-25T17:44:14+0300","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"== Physical Plan ==\n*(4) Project [type#1832, ident#1831, iso_country#1836, count#3795L]\n+- *(4) SortMergeJoin [type#1832], [type#3794], Inner\n   :- *(2) Sort [type#1832 ASC NULLS FIRST], false, 0\n   :  +- Exchange hashpartitioning(type#1832, 200)\n   :     +- *(1) Filter isnotnull(type#1832)\n   :        +- Scan ExistingRDD[type#1832,ident#1831,iso_country#1836]\n   +- *(3) Sort [type#3794 ASC NULLS FIRST], false, 0\n      +- *(3) Filter isnotnull(type#3794)\n         +- Scan ExistingRDD[type#3794,count#3795L]\n"}]},"apps":[],"jobName":"paragraph_1637851454714_-835199867","id":"20210426-100822_1545876145","dateCreated":"2021-11-25T17:44:14+0300","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:11268"},{"text":"%md\n### BroadcastNestedLoopJoin\n+ работает, когда один из датасетов небольшой и полностью вмещается в память воркера\n+ оставляет левый датасет как есть\n+ копирует правый датасет на каждый воркер\n+ проходится вложенным циклом по каждой партиции левого датасета и копией правого датасета и проверяет условие\n+ может быть автоматически использован, либо явно через `broadcast(df)`\n","user":"admin","dateUpdated":"2021-11-25T17:44:14+0300","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":false,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h3>BroadcastNestedLoopJoin</h3>\n<ul>\n<li>работает, когда один из датасетов небольшой и полностью вмещается в память воркера</li>\n<li>оставляет левый датасет как есть</li>\n<li>копирует правый датасет на каждый воркер</li>\n<li>проходится вложенным циклом по каждой партиции левого датасета и копией правого датасета и проверяет условие</li>\n<li>может быть автоматически использован, либо явно через <code>broadcast(df)</code></li>\n</ul>\n"}]},"apps":[],"jobName":"paragraph_1637851454715_-639341693","id":"20210426-100923_1179045334","dateCreated":"2021-11-25T17:44:14+0300","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:11269"},{"text":"%pyspark\nspark.conf.set(\"spark.sql.autoBroadcastJoinThreshold\", \"-1\")\n\nresult = left.join(broadcast(right), left[\"type\"] != right[\"type\"], \"inner\")\n\nresult.explain()","user":"admin","dateUpdated":"2021-11-25T17:44:14+0300","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"== Physical Plan ==\nBroadcastNestedLoopJoin BuildRight, Inner, NOT (type#146 = type#1111)\n:- *(1) Filter isnotnull(type#146)\n:  +- Scan ExistingRDD[type#146,ident#145,iso_country#150]\n+- BroadcastExchange IdentityBroadcastMode\n   +- *(2) Filter isnotnull(type#1111)\n      +- Scan ExistingRDD[type#1111,count#1112L]\n"}]},"apps":[],"jobName":"paragraph_1637851454716_-892987021","id":"20210426-100822_42614467","dateCreated":"2021-11-25T17:44:14+0300","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:11270"},{"text":"%md\n\n### CartesianProduct\n+ Создает пары из каждой партиции левого датасета с каждой партицией правого датасета, релоцирует каждую пару на один воркер и проверяет условие соединения\n+ на выходе создает N*M партиций\n+ работает медленнее остальных и часто приводит к ООМ воркеров\n","user":"admin","dateUpdated":"2021-11-25T17:44:14+0300","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":false,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h3>CartesianProduct</h3>\n<ul>\n<li>Создает пары из каждой партиции левого датасета с каждой партицией правого датасета, релоцирует каждую пару на один воркер и проверяет условие соединения</li>\n<li>на выходе создает N*M партиций</li>\n<li>работает медленнее остальных и часто приводит к ООМ воркеров</li>\n</ul>\n"}]},"apps":[],"jobName":"paragraph_1637851454717_-1368776976","id":"20210426-101005_1140957479","dateCreated":"2021-11-25T17:44:14+0300","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:11271"},{"text":"%pyspark\nspark.conf.set(\"spark.sql.autoBroadcastJoinThreshold\", \"-1\")\n\nresult = left.join(right, left[\"type\"] != right[\"type\"], \"inner\")\n\nresult.explain()","user":"admin","dateUpdated":"2021-11-25T17:44:14+0300","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"== Physical Plan ==\nCartesianProduct NOT (type#1832 = type#3800)\n:- *(1) Filter isnotnull(type#1832)\n:  +- Scan ExistingRDD[type#1832,ident#1831,iso_country#1836]\n+- *(2) Filter isnotnull(type#3800)\n   +- Scan ExistingRDD[type#3800,count#3801L]\n"}]},"apps":[],"jobName":"paragraph_1637851454718_-180673852","id":"20210426-100821_986807739","dateCreated":"2021-11-25T17:44:14+0300","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:11272"},{"text":"%md\n\n## Снижение количества shuffle\n\nВ ряде случаев можно уйти от лишних shuffle операций при выполнении соединения. Для этого оба DF должны иметь одинаковое партиционирование - одинаковое количество партиций и ключ партиционирования, совпадающий с ключом соединения.\n\nРазница между планами выполнения будет хорошо видна в Spark UI на графе выполнения в Jobs и плане выполнения в SQL\n\n","user":"admin","dateUpdated":"2021-11-25T17:44:14+0300","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":false,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h2>Снижение количества shuffle</h2>\n<p>В ряде случаев можно уйти от лишних shuffle операций при выполнении соединения. Для этого оба DF должны иметь одинаковое партиционирование - одинаковое количество партиций и ключ партиционирования, совпадающий с ключом соединения.</p>\n<p>Разница между планами выполнения будет хорошо видна в Spark UI на графе выполнения в Jobs и плане выполнения в SQL</p>\n"}]},"apps":[],"jobName":"paragraph_1637851454718_88999425","id":"20210426-101032_291499818","dateCreated":"2021-11-25T17:44:14+0300","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:11273"},{"text":"%pyspark\n\ndf.unpersist()\n\nleft = df\nright = df.groupBy(col(\"type\")).count()\njoined = left.join(right, \"type\")\njoined.count()","user":"admin","dateUpdated":"2021-11-25T17:44:14+0300","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"57421\n"}]},"apps":[],"jobName":"paragraph_1637851454719_-1548293514","id":"20210426-100821_388285362","dateCreated":"2021-11-25T17:44:14+0300","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:11274"},{"text":"%pyspark\n\ndf_rep = df.repartition(200, col(\"type\"))\n\nleft = df_rep\nright = df_rep.groupBy(col(\"type\")).count()\n\njoined = left.join(right, \"type\")\njoined.count()","user":"admin","dateUpdated":"2021-11-25T17:44:14+0300","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"57421\n"}]},"apps":[],"jobName":"paragraph_1637851454720_-1893170576","id":"20210426-100821_870620738","dateCreated":"2021-11-25T17:44:14+0300","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:11275"},{"text":"%md\n\n## Оптимизатор запросов Catalyst\nCatalyst выполняет оптимизацию запросов с целью ускорения их выполнения и применяет следующие методы:\n + Column projection\n + Partition pruning\n + Predicate pushdown\n + Constant folding\n \n Подготовим датасет для демонстрации работы Catalyst:\n","user":"admin","dateUpdated":"2021-11-25T17:44:14+0300","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":false,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h2>Оптимизатор запросов Catalyst</h2>\n<p>Catalyst выполняет оптимизацию запросов с целью ускорения их выполнения и применяет следующие методы:</p>\n<ul>\n<li><p>Column projection</p>\n</li>\n<li><p>Partition pruning</p>\n</li>\n<li><p>Predicate pushdown</p>\n</li>\n<li><p>Constant folding</p>\n<p>Подготовим датасет для демонстрации работы Catalyst:</p>\n</li>\n</ul>\n"}]},"apps":[],"jobName":"paragraph_1637851454721_1208024517","id":"20210426-101758_966707787","dateCreated":"2021-11-25T17:44:14+0300","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:11276"},{"text":"%pyspark\ndf \\\n    .write \\\n    .format(\"parquet\") \\\n    .partitionBy(\"iso_country\") \\\n    .mode(\"overwrite\") \\\n    .save(\"/tmp/airports.parquet\") \n\nairports = spark.read.parquet(\"/tmp/airports.parquet\")\nairports","user":"admin","dateUpdated":"2021-11-25T17:44:14+0300","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"DataFrame[ident: string, type: string, name: string, elevation_ft: int, continent: string, iso_region: string, municipality: string, gps_code: string, iata_code: string, local_code: string, coordinates: string, iso_country: string]\n"}]},"apps":[],"jobName":"paragraph_1637851454722_513807356","id":"20210426-101758_448185718","dateCreated":"2021-11-25T17:44:14+0300","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:11277"},{"text":"%sh\nhdfs dfs -ls /tmp/airports.parquet\n","user":"admin","dateUpdated":"2021-11-25T17:44:14+0300","config":{"editorSetting":{"language":"sh","editOnDblClick":false,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/sh","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"Found 244 items\n-rw-r--r--   2 zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/_SUCCESS\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=AD\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=AE\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=AF\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=AG\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=AI\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=AL\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=AM\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=AO\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=AQ\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=AR\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=AS\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=AT\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=AU\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=AW\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=AZ\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=BA\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=BB\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=BD\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=BE\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=BF\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=BG\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=BH\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=BI\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=BJ\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=BL\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=BM\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=BN\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=BO\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=BQ\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=BR\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=BS\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=BT\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=BW\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=BY\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=BZ\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=CA\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=CC\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=CD\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=CF\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=CG\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=CH\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=CI\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=CK\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=CL\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=CM\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=CN\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=CO\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=CR\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=CU\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=CV\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=CW\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=CX\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=CY\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=CZ\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=DE\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=DJ\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=DK\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=DM\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=DO\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=DZ\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=EC\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=EE\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=EG\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=EH\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=ER\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=ES\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=ET\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=FI\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=FJ\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=FK\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=FM\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=FO\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=FR\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=GA\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=GB\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=GD\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=GE\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=GF\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=GG\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=GH\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=GI\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=GL\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=GM\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=GN\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=GP\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=GQ\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=GR\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=GT\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=GU\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=GW\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=GY\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=HK\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=HN\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=HR\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=HT\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=HU\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=ID\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=IE\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=IL\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=IM\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=IN\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=IO\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=IQ\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=IR\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=IS\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=IT\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=JE\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=JM\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=JO\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=JP\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=KE\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=KG\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=KH\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=KI\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=KM\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=KN\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=KP\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=KR\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=KW\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=KY\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=KZ\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=LA\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=LB\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=LC\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=LI\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=LK\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=LR\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=LS\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=LT\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=LU\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=LV\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=LY\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=MA\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=MC\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=MD\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=ME\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=MF\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=MG\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=MH\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=MK\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=ML\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=MM\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=MN\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=MO\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=MP\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=MQ\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=MR\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=MS\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=MT\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=MU\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=MV\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=MW\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=MX\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=MY\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=MZ\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=NA\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=NC\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=NE\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=NF\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=NG\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=NI\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=NL\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=NO\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=NP\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=NR\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=NU\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=NZ\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=OM\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=PA\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=PE\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=PF\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=PG\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=PH\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=PK\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=PL\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=PM\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=PR\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=PS\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=PT\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=PW\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=PY\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=QA\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=RE\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=RO\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=RS\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=RU\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=RW\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=SA\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=SB\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=SC\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=SD\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=SE\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=SG\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=SH\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=SI\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=SK\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=SL\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=SM\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=SN\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=SO\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=SR\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=SS\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=ST\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=SV\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=SX\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=SY\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=SZ\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=TC\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=TD\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=TF\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=TG\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=TH\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=TJ\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=TL\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=TM\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=TN\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=TO\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=TR\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=TT\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=TV\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=TW\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=TZ\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=UA\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=UG\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=UM\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=US\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=UY\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=UZ\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=VA\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=VC\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=VE\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=VG\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=VI\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=VN\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=VU\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=WF\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=WS\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=XK\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=YE\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=YT\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=ZA\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=ZM\ndrwxr-xr-x   - zeppelin hdfs          0 2021-04-26 11:54 /tmp/airports.parquet/iso_country=ZW\n"}]},"apps":[],"jobName":"paragraph_1637851454723_-480225723","id":"20210426-101758_950208046","dateCreated":"2021-11-25T17:44:14+0300","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:11278"},{"text":"%sh\n\nhdfs dfs -ls /tmp/airports.parquet/iso_country=AD","user":"admin","dateUpdated":"2021-11-25T17:44:14+0300","config":{"editorSetting":{"language":"sh","editOnDblClick":false,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/sh","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"Found 1 items\n-rw-r--r--   2 zeppelin hdfs       2618 2021-04-26 11:54 /tmp/airports.parquet/iso_country=AD/part-00000-ef581cca-e2a2-4a9e-b75f-d3cf7387ed30.c000.snappy.parquet\n"}]},"apps":[],"jobName":"paragraph_1637851454724_-517480719","id":"20210426-115510_451621015","dateCreated":"2021-11-25T17:44:14+0300","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:11279"},{"text":"%pyspark\n\nspark.read.parquet(\"/tmp/airports.parquet/iso_country=AD/part-00000-ef581cca-e2a2-4a9e-b75f-d3cf7387ed30.c000.snappy.parquet\").printSchema()","user":"admin","dateUpdated":"2021-11-25T17:44:14+0300","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"root\n |-- ident: string (nullable = true)\n |-- type: string (nullable = true)\n |-- name: string (nullable = true)\n |-- elevation_ft: integer (nullable = true)\n |-- continent: string (nullable = true)\n |-- iso_region: string (nullable = true)\n |-- municipality: string (nullable = true)\n |-- gps_code: string (nullable = true)\n |-- iata_code: string (nullable = true)\n |-- local_code: string (nullable = true)\n |-- coordinates: string (nullable = true)\n\n"}]},"apps":[],"jobName":"paragraph_1637851454725_-770253849","id":"20210426-115604_113205945","dateCreated":"2021-11-25T17:44:14+0300","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:11280"},{"text":"%md\n### Column projection\nДанный механизм позволяет избегать вычитывания ненужных колонок при работе с источниками\n","user":"admin","dateUpdated":"2021-11-25T20:26:12+0300","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h3>Column projection</h3>\n<p>Данный механизм позволяет избегать вычитывания ненужных колонок при работе с источниками</p>\n"}]},"apps":[],"jobName":"paragraph_1637851454725_-984519084","id":"20210426-101849_502076240","dateCreated":"2021-11-25T17:44:14+0300","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:11281"},{"text":"%pyspark\nselected = airports.select(col(\"ident\"))\nselected.cache()\nselected.count()\nselected.unpersist()\nselected.explain()","user":"admin","dateUpdated":"2021-11-25T17:44:14+0300","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"== Physical Plan ==\n*(1) Project [ident#1273]\n+- *(1) FileScan parquet [ident#1273,iso_country#1284] Batched: true, Format: Parquet, Location: InMemoryFileIndex[hdfs://bigdataanalytics2-head-shdpt-v31-1-0.novalocal:8020/tmp/airports.parquet], PartitionCount: 243, PartitionFilters: [], PushedFilters: [], ReadSchema: struct<ident:string>\n"}]},"apps":[],"jobName":"paragraph_1637851454726_1293389990","id":"20210426-101758_1541090734","dateCreated":"2021-11-25T17:44:14+0300","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:11282"},{"text":"%pyspark\nselected = airports\nselected.cache()\nselected.count()\nselected.unpersist()\nselected.explain()","user":"admin","dateUpdated":"2021-11-25T17:44:14+0300","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"== Physical Plan ==\n*(1) FileScan parquet [ident#3968,type#3969,name#3970,elevation_ft#3971,continent#3972,iso_region#3973,municipality#3974,gps_code#3975,iata_code#3976,local_code#3977,coordinates#3978,iso_country#3979] Batched: true, Format: Parquet, Location: InMemoryFileIndex[hdfs://bigdataanalytics2-head-shdpt-v31-1-0.novalocal:8020/tmp/airports.parquet], PartitionCount: 243, PartitionFilters: [], PushedFilters: [], ReadSchema: struct<ident:string,type:string,name:string,elevation_ft:int,continent:string,iso_region:string,m...\n"}]},"apps":[],"jobName":"paragraph_1637851454727_576675755","id":"20210426-101757_1157015714","dateCreated":"2021-11-25T17:44:14+0300","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:11283"},{"text":"%md\n\n### Partition pruning\nДанный механизм позволяет избежать чтения ненужных партиций\n","user":"admin","dateUpdated":"2021-11-25T17:44:14+0300","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":false,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h3>Partition pruning</h3>\n<p>Данный механизм позволяет избежать чтения ненужных партиций</p>\n"}]},"apps":[],"jobName":"paragraph_1637851454728_1234138194","id":"20210426-102002_868533964","dateCreated":"2021-11-25T17:44:14+0300","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:11284"},{"text":"%pyspark\nfiltered = airports.filter(col(\"iso_country\") == \"RU\")\nfiltered.count()\nfiltered.explain(True)","user":"admin","dateUpdated":"2021-11-25T17:44:14+0300","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"== Parsed Logical Plan ==\n'Filter ('iso_country = RU)\n+- AnalysisBarrier\n      +- Relation[ident#1323,type#1324,name#1325,elevation_ft#1326,continent#1327,iso_region#1328,municipality#1329,gps_code#1330,iata_code#1331,local_code#1332,coordinates#1333,iso_country#1334] parquet\n\n== Analyzed Logical Plan ==\nident: string, type: string, name: string, elevation_ft: int, continent: string, iso_region: string, municipality: string, gps_code: string, iata_code: string, local_code: string, coordinates: string, iso_country: string\nFilter (iso_country#1334 = RU)\n+- Relation[ident#1323,type#1324,name#1325,elevation_ft#1326,continent#1327,iso_region#1328,municipality#1329,gps_code#1330,iata_code#1331,local_code#1332,coordinates#1333,iso_country#1334] parquet\n\n== Optimized Logical Plan ==\nFilter (isnotnull(iso_country#1334) && (iso_country#1334 = RU))\n+- Relation[ident#1323,type#1324,name#1325,elevation_ft#1326,continent#1327,iso_region#1328,municipality#1329,gps_code#1330,iata_code#1331,local_code#1332,coordinates#1333,iso_country#1334] parquet\n\n== Physical Plan ==\n*(1) FileScan parquet [ident#1323,type#1324,name#1325,elevation_ft#1326,continent#1327,iso_region#1328,municipality#1329,gps_code#1330,iata_code#1331,local_code#1332,coordinates#1333,iso_country#1334] Batched: true, Format: Parquet, Location: InMemoryFileIndex[hdfs://bigdataanalytics2-head-shdpt-v31-1-0.novalocal:8020/tmp/airports.parquet], PartitionCount: 1, PartitionFilters: [isnotnull(iso_country#1334), (iso_country#1334 = RU)], PushedFilters: [], ReadSchema: struct<ident:string,type:string,name:string,elevation_ft:int,continent:string,iso_region:string,m...\n"}]},"apps":[],"jobName":"paragraph_1637851454729_-217009295","id":"20210426-102001_975826046","dateCreated":"2021-11-25T17:44:14+0300","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:11285"},{"text":"%md\n### Predicate pushdown\nДанный механизм позволяет \"протолкнуть\" условия фильтрации данных на уровень datasource\n","user":"admin","dateUpdated":"2021-11-25T17:44:14+0300","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":false,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h3>Predicate pushdown</h3>\n<p>Данный механизм позволяет &ldquo;протолкнуть&rdquo; условия фильтрации данных на уровень datasource</p>\n"}]},"apps":[],"jobName":"paragraph_1637851454730_-1048731636","id":"20210426-102001_458579689","dateCreated":"2021-11-25T17:44:14+0300","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:11286"},{"text":"%pyspark\nfiltered = airports.filter(col(\"iso_region\") == \"RU\")\nfiltered.count()\nfiltered.explain()","user":"admin","dateUpdated":"2021-11-25T17:44:14+0300","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"== Physical Plan ==\n*(1) Project [ident#3968, type#3969, name#3970, elevation_ft#3971, continent#3972, iso_region#3973, municipality#3974, gps_code#3975, iata_code#3976, local_code#3977, coordinates#3978, iso_country#3979]\n+- *(1) Filter (isnotnull(iso_region#3973) && (iso_region#3973 = RU))\n   +- *(1) FileScan parquet [ident#3968,type#3969,name#3970,elevation_ft#3971,continent#3972,iso_region#3973,municipality#3974,gps_code#3975,iata_code#3976,local_code#3977,coordinates#3978,iso_country#3979] Batched: true, Format: Parquet, Location: InMemoryFileIndex[hdfs://bigdataanalytics2-head-shdpt-v31-1-0.novalocal:8020/tmp/airports.parquet], PartitionCount: 243, PartitionFilters: [], PushedFilters: [IsNotNull(iso_region), EqualTo(iso_region,RU)], ReadSchema: struct<ident:string,type:string,name:string,elevation_ft:int,continent:string,iso_region:string,m...\n"}]},"apps":[],"jobName":"paragraph_1637851454730_-936247404","id":"20210426-102001_771207691","dateCreated":"2021-11-25T17:44:14+0300","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:11287"},{"text":"%md\n### Simplify casts\nДанный механизм убирает ненужные `cast`\n","user":"admin","dateUpdated":"2021-11-25T17:44:14+0300","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":false,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h3>Simplify casts</h3>\n<p>Данный механизм убирает ненужные <code>cast</code></p>\n"}]},"apps":[],"jobName":"paragraph_1637851454731_25253276","id":"20210426-102049_1042396158","dateCreated":"2021-11-25T17:44:14+0300","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:11288"},{"text":"%pyspark\nresult = spark.range(10).select(col(\"id\").cast(\"long\"))\nresult.explain(True)","user":"admin","dateUpdated":"2021-11-25T17:44:14+0300","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":6,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"== Parsed Logical Plan ==\n'Project [unresolvedalias(cast('id as bigint), None)]\n+- AnalysisBarrier\n      +- Range (0, 10, step=1, splits=Some(2))\n\n== Analyzed Logical Plan ==\nid: bigint\nProject [cast(id#1691L as bigint) AS id#1693L]\n+- Range (0, 10, step=1, splits=Some(2))\n\n== Optimized Logical Plan ==\nRange (0, 10, step=1, splits=Some(2))\n\n== Physical Plan ==\n*(1) Range (0, 10, step=1, splits=2)\n"}]},"apps":[],"jobName":"paragraph_1637851454732_-477253380","id":"20210426-102000_790524038","dateCreated":"2021-11-25T17:44:14+0300","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:11289"},{"text":"%pyspark\nresult = spark.range(10).select(col(\"id\").cast(\"int\").cast(\"long\"))\nresult.explain(True)","user":"admin","dateUpdated":"2021-11-25T17:44:14+0300","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":6,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"== Parsed Logical Plan ==\n'Project [unresolvedalias(cast(unresolvedalias(cast('id as int), None) as bigint), None)]\n+- AnalysisBarrier\n      +- Range (0, 10, step=1, splits=Some(2))\n\n== Analyzed Logical Plan ==\nid: bigint\nProject [cast(cast(id#1695L as int) as bigint) AS id#1698L]\n+- Range (0, 10, step=1, splits=Some(2))\n\n== Optimized Logical Plan ==\nProject [cast(cast(id#1695L as int) as bigint) AS id#1698L]\n+- Range (0, 10, step=1, splits=Some(2))\n\n== Physical Plan ==\n*(1) Project [cast(cast(id#1695L as int) as bigint) AS id#1698L]\n+- *(1) Range (0, 10, step=1, splits=2)\n"}]},"apps":[],"jobName":"paragraph_1637851454733_-1978717572","id":"20210426-102000_2072796985","dateCreated":"2021-11-25T17:44:14+0300","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:11290"},{"text":"%md\n### Constant folding\nДанный механизм сокращает количество констант, используемых в физическом плане\n","user":"admin","dateUpdated":"2021-11-25T17:44:14+0300","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h3>Constant folding</h3>\n<p>Данный механизм сокращает количество констант, используемых в физическом плане</p>\n"}]},"apps":[],"jobName":"paragraph_1637851454734_1491500734","id":"20210426-102118_840699853","dateCreated":"2021-11-25T17:44:14+0300","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:11291"},{"text":"%pyspark\nfrom pyspark.sql.functions import lit\n\nresult = spark.range(10).select((lit(3) > lit(0)).alias(\"foo\"))\nresult.explain(True)","user":"admin","dateUpdated":"2021-11-25T20:29:24+0300","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":6,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"== Parsed Logical Plan ==\nProject [(3 > 0) AS foo#1702]\n+- AnalysisBarrier\n      +- Range (0, 10, step=1, splits=Some(2))\n\n== Analyzed Logical Plan ==\nfoo: boolean\nProject [(3 > 0) AS foo#1702]\n+- Range (0, 10, step=1, splits=Some(2))\n\n== Optimized Logical Plan ==\nProject [true AS foo#1702]\n+- Range (0, 10, step=1, splits=Some(2))\n\n== Physical Plan ==\n*(1) Project [true AS foo#1702]\n+- *(1) Range (0, 10, step=1, splits=2)\n"}]},"apps":[],"jobName":"paragraph_1637851454735_694610403","id":"20210426-102117_1448022000","dateCreated":"2021-11-25T17:44:14+0300","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:11292"},{"text":"%pyspark\nfrom pyspark.sql.functions import lit, col\n\nresult = spark.range(10).select((col(\"id\") >  lit(0)).alias(\"foo\"))\nresult.explain(True)","user":"admin","dateUpdated":"2021-11-25T17:44:14+0300","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":6,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"== Parsed Logical Plan ==\n'Project [('id > 0) AS foo#1706]\n+- AnalysisBarrier\n      +- Range (0, 10, step=1, splits=Some(2))\n\n== Analyzed Logical Plan ==\nfoo: boolean\nProject [(id#1704L > cast(0 as bigint)) AS foo#1706]\n+- Range (0, 10, step=1, splits=Some(2))\n\n== Optimized Logical Plan ==\nProject [(id#1704L > 0) AS foo#1706]\n+- Range (0, 10, step=1, splits=Some(2))\n\n== Physical Plan ==\n*(1) Project [(id#1704L > 0) AS foo#1706]\n+- *(1) Range (0, 10, step=1, splits=2)\n"}]},"apps":[],"jobName":"paragraph_1637851454736_639971611","id":"20210426-094115_589352873","dateCreated":"2021-11-25T17:44:14+0300","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:11293"},{"text":"%md\n### Combine filters\nДанный механизм объединяет фильтры","user":"admin","dateUpdated":"2021-11-25T17:44:14+0300","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h3>Combine filters</h3>\n<p>Данный механизм объединяет фильтры</p>\n"}]},"apps":[],"jobName":"paragraph_1637851454736_543687246","id":"20210426-091015_342286643","dateCreated":"2021-11-25T17:44:14+0300","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:11294"},{"text":"%pyspark\n\nresult = spark.range(10).filter(col(\"id\") > 0) \\\n    .filter(col(\"id\") != 5) \\\n    .filter(col(\"id\") < 10)\n    \nresult.explain(True)\n","user":"admin","dateUpdated":"2021-11-25T20:29:52+0300","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"== Parsed Logical Plan ==\n'Filter ('id < 10)\n+- AnalysisBarrier\n      +- Filter NOT (id#1708L = cast(5 as bigint))\n         +- Filter (id#1708L > cast(0 as bigint))\n            +- Range (0, 10, step=1, splits=Some(2))\n\n== Analyzed Logical Plan ==\nid: bigint\nFilter (id#1708L < cast(10 as bigint))\n+- Filter NOT (id#1708L = cast(5 as bigint))\n   +- Filter (id#1708L > cast(0 as bigint))\n      +- Range (0, 10, step=1, splits=Some(2))\n\n== Optimized Logical Plan ==\nFilter (((id#1708L > 0) && NOT (id#1708L = 5)) && (id#1708L < 10))\n+- Range (0, 10, step=1, splits=Some(2))\n\n== Physical Plan ==\n*(1) Filter (((id#1708L > 0) && NOT (id#1708L = 5)) && (id#1708L < 10))\n+- *(1) Range (0, 10, step=1, splits=2)\n"}]},"apps":[],"jobName":"paragraph_1637851454747_641580484","id":"20210426-102231_1333605882","dateCreated":"2021-11-25T17:44:14+0300","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:11295"},{"user":"admin","dateUpdated":"2021-11-25T17:44:14+0300","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1637851454753_1638261419","id":"20210426-091015_74140046","dateCreated":"2021-11-25T17:44:14+0300","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:11296"}],"name":"it_3/4 lecture","id":"2GN96YY8D","noteParams":{},"noteForms":{},"angularObjects":{"sparkLocal:shared_process":[],"md:shared_process":[],"python:shared_process":[],"sh:shared_process":[],"spark::2GN96YY8D":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}