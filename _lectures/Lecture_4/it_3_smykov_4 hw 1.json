{"paragraphs":[{"text":"%pyspark\n\n# imports\n\nfrom pyspark.sql.functions import broadcast\nfrom pyspark.sql.functions import col\n\nimport pyspark.sql.functions as f\n","user":"smykov","dateUpdated":"2021-11-29T01:31:11+0300","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1638113776170_-506698882","id":"20211128-183616_1202388213","dateCreated":"2021-11-28T18:36:16+0300","dateStarted":"2021-11-29T01:31:11+0300","dateFinished":"2021-11-29T01:31:28+0300","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:58"},{"text":"%spark.conf\n\nspark.executor.instances=2\n","user":"smykov","dateUpdated":"2021-11-25T20:47:03+0300","config":{"editorSetting":{"language":"text","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/text","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1637862423455_1308763686","id":"20211125-171509_574539172","dateCreated":"2021-11-25T20:47:03+0300","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:59"},{"title":"Как выполнять","text":"%md\n.\n.\n.\nНужно скопировать себе эту тетрадку и предоставить доступ к копии на чтение, запись и запуск тетрадки пользователю admin. Параграфы с генерацией данных и созданием семплов запускать не нужно, они оставлены для ознакомления","user":"smykov","dateUpdated":"2021-11-25T20:47:03+0300","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<p>.\n<br  />.\n<br  />.\n<br  />Нужно скопировать себе эту тетрадку и предоставить доступ к копии на чтение, запись и запуск тетрадки пользователю admin. Параграфы с генерацией данных и созданием семплов запускать не нужно, они оставлены для ознакомления</p>\n"}]},"apps":[],"jobName":"paragraph_1637862423457_-1614702573","id":"20201127-213054_1829929461","dateCreated":"2021-11-25T20:47:03+0300","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:60"},{"text":"print(\"https://arena-hadoop.inno.tech:18088/proxy/\" + sc.applicationId)","user":"smykov","dateUpdated":"2021-11-29T01:31:14+0300","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"https://arena-hadoop.inno.tech:18088/proxy/application_1637409254228_0462"}]},"apps":[],"jobName":"paragraph_1637862423458_638190906","id":"20210412-130850_152897354","dateCreated":"2021-11-25T20:47:03+0300","dateStarted":"2021-11-29T01:31:28+0300","dateFinished":"2021-11-29T01:31:28+0300","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:61"},{"text":"spark.sql(\"create database hw_4\")","user":"smykov","dateUpdated":"2021-11-25T20:47:03+0300","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res2: org.apache.spark.sql.DataFrame = []\n"}]},"apps":[],"jobName":"paragraph_1637862423459_1431020653","id":"20211125-171610_1335611820","dateCreated":"2021-11-25T20:47:03+0300","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:62"},{"title":"Генерация events таблицы (код для ознакомления, запускать не нужно)","text":"import org.apache.spark.mllib.random.RandomRDDs._\nimport java.time.LocalDate\nimport java.time.format.DateTimeFormatter\n\nval dates = (0 to 14).map(LocalDate.of(2020, 11, 1).plusDays(_).format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"))).toSeq\n\ndef generateCity(r: Double): String = if (r < 0.9) \"BIG_CITY\" else \"SMALL_CITY_\" + scala.math.round((r - 0.9) * 1000)\n\ndef generateCityUdf = udf(generateCity _)\n\n// spark.sql(\"drop table hw2.events_full\")\n\nfor(i <- dates) {\n    uniformRDD(sc, 10000000L, 1)\n    .toDF(\"uid\")\n    .withColumn(\"date\", lit(i))\n    .withColumn(\"city\", generateCityUdf($\"uid\"))\n    .selectExpr(\"date\", \" sha2(cast(uid as STRING), 256) event_id\", \"city\")\n    .withColumn(\"skew_key\", when($\"city\" === \"BIG_CITY\", lit(\"big_event\")).otherwise($\"event_id\"))\n    .write.mode(\"append\")\n    .partitionBy(\"date\")\n    .saveAsTable(\"hw_4.events_full\")\n}\n","user":"smykov","dateUpdated":"2021-11-25T20:47:03+0300","config":{"tableHide":false,"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import org.apache.spark.mllib.random.RandomRDDs._\nimport java.time.LocalDate\nimport java.time.format.DateTimeFormatter\ndates: scala.collection.immutable.Seq[String] = Vector(2020-11-01, 2020-11-02, 2020-11-03, 2020-11-04, 2020-11-05, 2020-11-06, 2020-11-07, 2020-11-08, 2020-11-09, 2020-11-10, 2020-11-11, 2020-11-12, 2020-11-13, 2020-11-14, 2020-11-15)\ngenerateCity: (r: Double)String\ngenerateCityUdf: org.apache.spark.sql.expressions.UserDefinedFunction\n"}]},"apps":[],"jobName":"paragraph_1637862423460_-407809135","id":"20201127-224038_803369215","dateCreated":"2021-11-25T20:47:03+0300","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:63"},{"title":"Генерация events_sample","text":"spark.table(\"hw_4.events_full\")\n.select(\"event_id\")\n.sample(0.001)\n.repartition(2)\n.write.mode(\"overwrite\")\n.saveAsTable(\"hw_4.sample\")\n","user":"smykov","dateUpdated":"2021-11-25T20:47:03+0300","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":3,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1637862423461_52171456","id":"20201127-230139_1962818180","dateCreated":"2021-11-25T20:47:03+0300","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:64"},{"text":"\nspark.table(\"hw_4.sample\")\n.limit(100)\n.coalesce(1)\n.write.mode(\"overwrite\")\n.saveAsTable(\"hw_4.sample_small\")","user":"smykov","dateUpdated":"2021-11-25T20:47:03+0300","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":3,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1637862423462_1412822782","id":"20201128-000812_530567540","dateCreated":"2021-11-25T20:47:03+0300","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:65"},{"text":"\n\nspark.table(\"hw_4.events_full\")\n.select(\"event_id\")\n.sample(0.003)\n.repartition(1)\n.write.mode(\"overwrite\")\n.saveAsTable(\"hw_4.sample_big\")","user":"smykov","dateUpdated":"2021-11-25T20:47:03+0300","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":3,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1637862423463_1410683081","id":"20201128-091248_492627774","dateCreated":"2021-11-25T20:47:03+0300","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:66"},{"text":"\n\nspark.table(\"hw_4.events_full\")\n.select(\"event_id\")\n.sample(0.015)\n.repartition(1)\n.write.mode(\"overwrite\")\n.saveAsTable(\"hw_4.sample_very_big\")","user":"smykov","dateUpdated":"2021-11-25T20:47:03+0300","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":3,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1637862423464_-1039460985","id":"20201128-093907_1614062530","dateCreated":"2021-11-25T20:47:03+0300","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:67"},{"title":"Задание 1","text":"%md\n\n\n\nДля упражнений сгрененирован большой набор синтетических данных в таблице hw2.events_full. Из этого набора данных созданы маленькие (относительно исходного набора) таблицы разного размера kotelnikov.sample_[small, big, very_big]. \n\nОтветить на вопросы:\n * какова структура таблиц\n * сколько в них записей \n * сколько места занимают данные\n ","user":"smykov","dateUpdated":"2021-11-25T20:47:03+0300","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<p>Для упражнений сгрененирован большой набор синтетических данных в таблице hw2.events_full. Из этого набора данных созданы маленькие (относительно исходного набора) таблицы разного размера kotelnikov.sample_[small, big, very_big].</p>\n<p>Ответить на вопросы:</p>\n<ul>\n<li>какова структура таблиц</li>\n<li>сколько в них записей</li>\n<li>сколько места занимают данные</li>\n</ul>\n"}]},"apps":[],"jobName":"paragraph_1637862423465_-1445577260","id":"20201128-094640_2955666","dateCreated":"2021-11-25T20:47:03+0300","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:68"},{"text":"%pyspark\n\nspark.table(\"hw_4.sample_small\").printSchema()\nspark.table(\"hw_4.sample_big\").printSchema()\nspark.table(\"hw_4.sample_very_big\").printSchema()\n\n# таблицы содержат только 1 колонку - event_id","user":"smykov","dateUpdated":"2021-11-28T18:53:09+0300","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"root\n |-- event_id: string (nullable = true)\n\nroot\n |-- event_id: string (nullable = true)\n\nroot\n |-- event_id: string (nullable = true)\n\n"}]},"apps":[],"jobName":"paragraph_1637932609550_-282410179","id":"20211126-161649_693173672","dateCreated":"2021-11-26T16:16:49+0300","dateStarted":"2021-11-26T16:21:57+0300","dateFinished":"2021-11-26T16:22:17+0300","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:69"},{"text":"%pyspark\n\nsmall = spark.table(\"hw_4.sample_small\").count()\nbig = spark.table(\"hw_4.sample_big\").count()\nvery_big = spark.table(\"hw_4.sample_very_big\").count()\n\nprint(\"sample_small содержит {} строк\".format(small))\nprint(\"sample_big содержит {} строк\".format(big))\nprint(\"sample_very_big содержит {} строк\".format(very_big))","user":"smykov","dateUpdated":"2021-11-28T18:54:50+0300","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"sample_small содержит 100 строк\nsample_big содержит 450396 строк\nsample_very_big содержит 2250730 строк\n"}]},"apps":[],"jobName":"paragraph_1637932980173_-2131901658","id":"20211126-162300_1817581631","dateCreated":"2021-11-26T16:23:00+0300","dateStarted":"2021-11-28T18:54:50+0300","dateFinished":"2021-11-28T18:54:50+0300","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:70"},{"text":"%sh\n\nhdfs dfs -ls -h /apps/hive/warehouse/hw_4.db/\nhdfs dfs -du -h /apps/hive/warehouse/hw_4.db/\n\n# size  |  disk_space_consumed_with_all_replicas  |  full_path_name\n\n# small    - 7.1 K\n# big      - 27.4 M\n# very big - 136.7 M\n","user":"smykov","dateUpdated":"2021-11-26T16:31:29+0300","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"sh","editOnDblClick":false,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/sh"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"WARNING: HADOOP_PREFIX has been replaced by HADOOP_HOME. Using value of HADOOP_PREFIX.\nFound 7 items\ndrwxr-xr-x   - zeppelin hadoop          0 2021-11-25 17:51 /apps/hive/warehouse/hw_4.db/events_full\ndrwxr-xr-x   - zeppelin hadoop          0 2021-11-26 13:19 /apps/hive/warehouse/hw_4.db/sample\ndrwxr-xr-x   - zeppelin hadoop          0 2021-11-26 13:10 /apps/hive/warehouse/hw_4.db/sample_big\ndrwxr-xr-x   - zeppelin hadoop          0 2021-11-25 19:01 /apps/hive/warehouse/hw_4.db/sample_big_bucket\ndrwxr-xr-x   - zeppelin hadoop          0 2021-11-26 13:09 /apps/hive/warehouse/hw_4.db/sample_small\ndrwxr-xr-x   - zeppelin hadoop          0 2021-11-26 13:11 /apps/hive/warehouse/hw_4.db/sample_very_big\ndrwxr-xr-x   - zeppelin hadoop          0 2021-11-25 19:01 /apps/hive/warehouse/hw_4.db/sample_very_big_bucket\nWARNING: HADOOP_PREFIX has been replaced by HADOOP_HOME. Using value of HADOOP_PREFIX.\n10.0 G   29.9 G   /apps/hive/warehouse/hw_4.db/events_full\n9.1 M    27.3 M   /apps/hive/warehouse/hw_4.db/sample\n27.4 M   82.1 M   /apps/hive/warehouse/hw_4.db/sample_big\n54.6 M   163.8 M  /apps/hive/warehouse/hw_4.db/sample_big_bucket\n7.1 K    21.2 K   /apps/hive/warehouse/hw_4.db/sample_small\n136.7 M  410.1 M  /apps/hive/warehouse/hw_4.db/sample_very_big\n273.3 M  819.8 M  /apps/hive/warehouse/hw_4.db/sample_very_big_bucket\n"}]},"apps":[],"jobName":"paragraph_1637928912494_1138819945","id":"20211126-151512_591470622","dateCreated":"2021-11-26T15:15:12+0300","dateStarted":"2021-11-26T16:29:58+0300","dateFinished":"2021-11-26T16:30:02+0300","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:71"},{"title":"Задание 2","text":"%md\n.\n.\n.\n\nПолучить планы запросов для джойна большой таблицы hw2.events_full с каждой из таблиц hw2.sample, hw2.sample_big, hw2.sample_very_big по полю event_id. В каких случаях используется BroadcastHashJoin? \n\nBroadcastHashJoin автоматически выполняется для джойна с таблицами, размером меньше параметра spark.sql.autoBroadcastJoinThreshold. Узнать его значение можно командой spark.conf.get(\"spark.sql.autoBroadcastJoinThreshold\").","user":"smykov","dateUpdated":"2021-11-26T16:32:07+0300","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<p>.\n<br  />.\n<br  />.</p>\n<p>Получить планы запросов для джойна большой таблицы hw2.events_full с каждой из таблиц hw2.sample, hw2.sample_big, hw2.sample_very_big по полю event_id. В каких случаях используется BroadcastHashJoin?</p>\n<p>BroadcastHashJoin автоматически выполняется для джойна с таблицами, размером меньше параметра spark.sql.autoBroadcastJoinThreshold. Узнать его значение можно командой spark.conf.get(&ldquo;spark.sql.autoBroadcastJoinThreshold&rdquo;).</p>\n"}]},"apps":[],"jobName":"paragraph_1637862423468_1837801177","id":"20201128-132950_831220047","dateCreated":"2021-11-25T20:47:03+0300","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:72"},{"text":"%pyspark\n\nprint(\"autoBroadcastJoinThreshold = {} MB\".format( int(spark.conf.get(\"spark.sql.autoBroadcastJoinThreshold\")) / 1024 / 1024))\nprint('-----------------------------------------')\n\nsmall_join = spark.table(\"hw_4.events_full\").join(spark.table(\"hw_4.sample_small\"), 'event_id').explain()\nprint('-----------------------------------------')\n\nbig_join = spark.table(\"hw_4.events_full\").join(spark.table(\"hw_4.sample_big\"), 'event_id').explain()\nprint('-----------------------------------------')\n\nvery_big_join = spark.table(\"hw_4.events_full\").join(spark.table(\"hw_4.sample_very_big\"), 'event_id').explain()\n\n\n# small_join - BroadcastHashJoin\n# big_join - SortMergeJoin\n# very_big_join - SortMergeJoin\n","user":"smykov","dateUpdated":"2021-11-28T22:50:08+0300","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"autoBroadcastJoinThreshold = 10 MB\n-----------------------------------------\n== Physical Plan ==\n*(2) Project [event_id#0, city#1, skew_key#2, date#3]\n+- *(2) BroadcastHashJoin [event_id#0], [event_id#8], Inner, BuildRight\n   :- *(2) Project [event_id#0, city#1, skew_key#2, date#3]\n   :  +- *(2) Filter isnotnull(event_id#0)\n   :     +- *(2) FileScan parquet hw_4.events_full[event_id#0,city#1,skew_key#2,date#3] Batched: true, Format: Parquet, Location: CatalogFileIndex[hdfs://10.4.14.1:8020/apps/hive/warehouse/hw_4.db/events_full], PartitionCount: 15, PartitionFilters: [], PushedFilters: [IsNotNull(event_id)], ReadSchema: struct<event_id:string,city:string,skew_key:string>\n   +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, true]))\n      +- *(1) Project [event_id#8]\n         +- *(1) Filter isnotnull(event_id#8)\n            +- *(1) FileScan parquet hw_4.sample_small[event_id#8] Batched: true, Format: Parquet, Location: InMemoryFileIndex[hdfs://10.4.14.1:8020/apps/hive/warehouse/hw_4.db/sample_small], PartitionFilters: [], PushedFilters: [IsNotNull(event_id)], ReadSchema: struct<event_id:string>\n-----------------------------------------\n== Physical Plan ==\n*(5) Project [event_id#0, city#1, skew_key#2, date#3]\n+- *(5) SortMergeJoin [event_id#0], [event_id#18], Inner\n   :- *(2) Sort [event_id#0 ASC NULLS FIRST], false, 0\n   :  +- Exchange hashpartitioning(event_id#0, 200)\n   :     +- *(1) Project [event_id#0, city#1, skew_key#2, date#3]\n   :        +- *(1) Filter isnotnull(event_id#0)\n   :           +- *(1) FileScan parquet hw_4.events_full[event_id#0,city#1,skew_key#2,date#3] Batched: true, Format: Parquet, Location: CatalogFileIndex[hdfs://10.4.14.1:8020/apps/hive/warehouse/hw_4.db/events_full], PartitionCount: 15, PartitionFilters: [], PushedFilters: [IsNotNull(event_id)], ReadSchema: struct<event_id:string,city:string,skew_key:string>\n   +- *(4) Sort [event_id#18 ASC NULLS FIRST], false, 0\n      +- Exchange hashpartitioning(event_id#18, 200)\n         +- *(3) Project [event_id#18]\n            +- *(3) Filter isnotnull(event_id#18)\n               +- *(3) FileScan parquet hw_4.sample_big[event_id#18] Batched: true, Format: Parquet, Location: InMemoryFileIndex[hdfs://10.4.14.1:8020/apps/hive/warehouse/hw_4.db/sample_big], PartitionFilters: [], PushedFilters: [IsNotNull(event_id)], ReadSchema: struct<event_id:string>\n-----------------------------------------\n== Physical Plan ==\n*(5) Project [event_id#0, city#1, skew_key#2, date#3]\n+- *(5) SortMergeJoin [event_id#0], [event_id#28], Inner\n   :- *(2) Sort [event_id#0 ASC NULLS FIRST], false, 0\n   :  +- Exchange hashpartitioning(event_id#0, 200)\n   :     +- *(1) Project [event_id#0, city#1, skew_key#2, date#3]\n   :        +- *(1) Filter isnotnull(event_id#0)\n   :           +- *(1) FileScan parquet hw_4.events_full[event_id#0,city#1,skew_key#2,date#3] Batched: true, Format: Parquet, Location: CatalogFileIndex[hdfs://10.4.14.1:8020/apps/hive/warehouse/hw_4.db/events_full], PartitionCount: 15, PartitionFilters: [], PushedFilters: [IsNotNull(event_id)], ReadSchema: struct<event_id:string,city:string,skew_key:string>\n   +- *(4) Sort [event_id#28 ASC NULLS FIRST], false, 0\n      +- Exchange hashpartitioning(event_id#28, 200)\n         +- *(3) Project [event_id#28]\n            +- *(3) Filter isnotnull(event_id#28)\n               +- *(3) FileScan parquet hw_4.sample_very_big[event_id#28] Batched: true, Format: Parquet, Location: InMemoryFileIndex[hdfs://10.4.14.1:8020/apps/hive/warehouse/hw_4.db/sample_very_big], PartitionFilters: [], PushedFilters: [IsNotNull(event_id)], ReadSchema: struct<event_id:string>\n"}]},"apps":[],"jobName":"paragraph_1637933545736_1097950518","id":"20211126-163225_379077337","dateCreated":"2021-11-26T16:32:25+0300","dateStarted":"2021-11-28T22:50:08+0300","dateFinished":"2021-11-28T22:50:13+0300","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:73"},{"text":"%pyspark\n","user":"smykov","dateUpdated":"2021-11-26T16:59:27+0300","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1637935167293_1463193231","id":"20211126-165927_1801174865","dateCreated":"2021-11-26T16:59:27+0300","status":"READY","progressUpdateIntervalMs":500,"$$hashKey":"object:74"},{"title":"Задание 3","text":"%md\n.\n.\n.\n\nВыполнить джойны с таблицами  hw2.sample,  hw2.sample_big в отдельных параграфах, чтобы узнать время выполнения запросов (например, вызвать .count() для результатов запросов). Время выполнения параграфа считается автоматически и указывается в нижней части по завершении\n\nЗайти в spark ui (ссылку сгенерировать в следующем папраграфе). Сколько tasks создано на каждую операцию? Почему именно столько? Каков DAG вычислений?  ","user":"smykov","dateUpdated":"2021-11-26T17:26:10+0300","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<p>.\n<br  />.\n<br  />.</p>\n<p>Выполнить джойны с таблицами  hw2.sample,  hw2.sample_big в отдельных параграфах, чтобы узнать время выполнения запросов (например, вызвать .count() для результатов запросов). Время выполнения параграфа считается автоматически и указывается в нижней части по завершении</p>\n<p>Зайти в spark ui (ссылку сгенерировать в следующем папраграфе). Сколько tasks создано на каждую операцию? Почему именно столько? Каков DAG вычислений?</p>\n"}]},"apps":[],"jobName":"paragraph_1637862423469_-1839406469","id":"20201128-140231_1065047171","dateCreated":"2021-11-25T20:47:03+0300","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:75"},{"text":"%pyspark\nspark.table(\"hw_4.events_full\").join(spark.table(\"hw_4.sample_small\"), 'event_id').count()\n\n","user":"smykov","dateUpdated":"2021-11-28T22:50:17+0300","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"100\n"}]},"apps":[],"jobName":"paragraph_1637936590303_1851120975","id":"20211126-172310_1157610754","dateCreated":"2021-11-26T17:23:10+0300","dateStarted":"2021-11-28T22:50:18+0300","dateFinished":"2021-11-28T22:52:08+0300","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:76"},{"text":"%python\n\n# tasks (for all stages) - 82\n# stages                 - 2\n\n### STAGE 1\n# submitted              - 2021/11/28 19:15:33\n# tasks                  - 81\n# duration               - 2.4 min\n# input                  - 8.9 GB\n# shuffle write          - 4.4 KB\n\n\n### STAGE 2\n# submitted              - 2021/11/28 19:17:55\n# tasks                  - 1\n# duration               - 85 ms\n# shuffle read           - 4.4 KB\n\n\n# resulting count        - 100\n\n\n### DAG\n\n### STAGE 1\n# WholeStageCodegen: FileScanRDD -> MapPartitionsRDD\n# Exchange:  MapPartitionsRDD\n\n### STAGE 2\n# Exchange: ShuffledRowRDD\n# WholeStageCodegen: MapPartitionsRDD\n# mapPartitionsInternal: MapPartitionsRDD","user":"smykov","dateUpdated":"2021-11-28T23:00:13+0300","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1638115920903_-1954823482","id":"20211128-191200_1151345697","dateCreated":"2021-11-28T19:12:00+0300","status":"READY","progressUpdateIntervalMs":500,"$$hashKey":"object:77"},{"text":"%pyspark\nspark.table(\"hw_4.events_full\").join(spark.table(\"hw_4.sample_big\"), 'event_id').count()","user":"smykov","dateUpdated":"2021-11-28T22:56:19+0300","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"450396\n"}]},"apps":[],"jobName":"paragraph_1637937285773_1940665330","id":"20211126-173445_359876463","dateCreated":"2021-11-26T17:34:45+0300","dateStarted":"2021-11-28T22:56:19+0300","dateFinished":"2021-11-28T23:10:47+0300","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:78"},{"text":"%python\n\n# tasks (for all stages) - 284\n# stages                 - 4\n\n### STAGE 1\n# submitted              - 2021/11/28 18:58:43\n# tasks                  - 81\n# duration               - 11 min \n# input                  - 8.9 GB\n# shuffle write          - 4.4 KB\n\n\n### STAGE 2\n# submitted              - 2021/11/28 19:09:35\n# tasks                  - 200\n# duration               - 5.6 min\n# shuffle read           - 9.0 GB\n# shuffle write          - 11.5 KB\n\n### STAGE 3\n# submitted              - 2021/11/28 19:15:11\n# tasks                  - 1\n# duration               - 56 ms\n# shuffle read           - 11.5 KB\n\n### STAGE 4\n# submitted              - 2021/11/28 19:15:16\n# tasks                  - 1\n# duration               - 66 ms\n# input                  - 7.1 KB\n\n\n# resulting count        - 450396\n\n\n### DAG\n\n### STAGE 1\n# WholeStageCodegen: FileScanRDD -> MapPartitionsRDD\n# Exchange:  MapPartitionsRDD\n\n### STAGE 2\n# Exchange: ShuffledRowRDD\n# WholeStageCodegen: MapPartitionsRDD\n# mapPartitionsInternal: MapPartitionsRDD\n\n# Остальные не посмотрел потому что джоба исполняется почти 20 минут, на момент ожидания ДАГ не сформирован, а далее у меня спарк падал каждые 10 минут, ждал несколько раз по 20 минут, но..","user":"smykov","dateUpdated":"2021-11-29T01:23:36+0300","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1638115530695_-1631762981","id":"20211128-190530_655490217","dateCreated":"2021-11-28T19:05:30+0300","dateStarted":"2021-11-28T19:20:57+0300","dateFinished":"2021-11-28T19:21:04+0300","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:79"},{"title":"Генерация ссылки на  spark UI","text":"println(\"https://arena-hadoop.inno.tech:18088/proxy/\" + sc.applicationId + \"/jobs/\")","user":"smykov","dateUpdated":"2021-11-28T22:36:25+0300","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"https://arena-hadoop.inno.tech:18088/proxy/application_1637409254228_0387/jobs/\n"}]},"apps":[],"jobName":"paragraph_1637862423470_-938613982","id":"20201128-150602_756898802","dateCreated":"2021-11-25T20:47:03+0300","dateStarted":"2021-11-28T22:36:25+0300","dateFinished":"2021-11-28T22:36:46+0300","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:80"},{"title":"Насильный broadcast","text":"%md\n\nОптимизировать джойн с таблицами hw2.sample_big, hw2.sample_very_big с помощью broadcast(df). Выполнить запрос, посмотреть в UI, как поменялся план запроса, DAG, количество тасков. Второй запрос не выполнится ","user":"smykov","dateUpdated":"2021-11-25T20:47:03+0300","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<p>Оптимизировать джойн с таблицами hw2.sample_big, hw2.sample_very_big с помощью broadcast(df). Выполнить запрос, посмотреть в UI, как поменялся план запроса, DAG, количество тасков. Второй запрос не выполнится</p>\n"}]},"apps":[],"jobName":"paragraph_1637862423470_-2047000778","id":"20201128-140749_375295552","dateCreated":"2021-11-25T20:47:03+0300","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:81"},{"text":"%pyspark\n\nspark.table(\"hw_4.events_full\")\\\n.join(broadcast(spark.table(\"hw_4.sample_big\")), \"event_id\").count()","user":"smykov","dateUpdated":"2021-11-28T23:26:30+0300","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"450396\n"}]},"apps":[],"jobName":"paragraph_1637862423472_-51659660","id":"20201224-172528_1623196266","dateCreated":"2021-11-25T20:47:03+0300","dateStarted":"2021-11-28T23:26:30+0300","dateFinished":"2021-11-28T23:31:56+0300","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:82"},{"text":"%python\n\n# tasks (for all stages) - 84\n# stages                 - 3\n\n### STAGE 1\n# submitted              - 2021/11/28 23:26:37\n# tasks                  - 2\n# duration               - 9 s\n# input                  - 27.4 MB\n\n\n### STAGE 2\n# submitted              - 2021/11/28 23:26:48\n# tasks                  - 81\n# duration               - 5.1 min\n# input                  - 8.9 GB\n# shuffle write          - 4.7 KB\n\n### STAGE 3\n# submitted              - 2021/11/28 23:31:56\n# tasks                  - 0.1 s\n# duration               - 56 ms\n# shuffle read           - 4.7 KB\n\n\n# resulting count        - 450396\n\n\n### DAG\n\n### Спарк падает сразу после выполнения запроса, ДАГ не успеваю посмотреть\n","user":"smykov","dateUpdated":"2021-11-28T23:43:39+0300","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1638128279075_-1797917352","id":"20211128-223759_462582015","dateCreated":"2021-11-28T22:37:59+0300","status":"READY","progressUpdateIntervalMs":500,"$$hashKey":"object:83"},{"text":"%pyspark\n\n# Верю на слово что запрос не выполниться (хотя в лекции выполнялся)\n\n# spark.table(\"hw_4.events_full\")\\\n# .join(broadcast(spark.table(\"hw_4.sample_very_big\")), \"event_id\")","user":"smykov","dateUpdated":"2021-11-28T23:28:00+0300","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1638128403002_-1555205783","id":"20211128-224003_619151769","dateCreated":"2021-11-28T22:40:03+0300","status":"READY","progressUpdateIntervalMs":500,"$$hashKey":"object:84"},{"title":"Отключение auto broadcast","text":"%md\n.\n.\n.\n\nОтключить автоматический броадкаст командой spark.conf.set(\"spark.sql.autoBroadcastJoinThreshold\", \"-1\"). Сделать джойн с семплом hw_4.sample, сравнить время выполнения запроса.\n","user":"smykov","dateUpdated":"2021-11-25T20:47:03+0300","config":{"tableHide":true,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<p>.\n<br  />.\n<br  />.</p>\n<p>Отключить автоматический броадкаст командой spark.conf.set(&ldquo;spark.sql.autoBroadcastJoinThreshold&rdquo;, &ldquo;-1&rdquo;). Сделать джойн с семплом hw2.sample, сравнить время выполнения запроса.</p>\n"}]},"apps":[],"jobName":"paragraph_1637862423472_-1812888408","id":"20201128-092252_410955057","dateCreated":"2021-11-25T20:47:03+0300","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:85"},{"text":"%pyspark\n### turn off autobroadcast\nspark.conf.set(\"spark.sql.autoBroadcastJoinThreshold\", \"-1\")\n\n\nspark.table(\"hw_4.events_full\")\\\n.join(spark.table(\"hw_4.sample\"), \"event_id\").count()\n\n\n# reset autobroadcast to default\nspark.conf.set(\"spark.sql.autoBroadcastJoinThreshold\", \"26214400\")","user":"smykov","dateUpdated":"2021-11-28T23:35:47+0300","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1638128375656_-627441392","id":"20211128-223935_1473946929","dateCreated":"2021-11-28T22:39:35+0300","dateStarted":"2021-11-28T23:35:47+0300","dateFinished":"2021-11-28T23:56:30+0300","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:86"},{"text":"%pyspark\n### turn off autobroadcast\nspark.conf.set(\"spark.sql.autoBroadcastJoinThreshold\", \"-1\")\n\n\nspark.table(\"hw_4.events_full\")\\\n.join(spark.table(\"hw_4.sample\"), \"event_id\").explain()\n\n\n# reset autobroadcast to default\nspark.conf.set(\"spark.sql.autoBroadcastJoinThreshold\", \"26214400\")","user":"smykov","dateUpdated":"2021-11-28T23:48:34+0300","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"== Physical Plan ==\n*(5) Project [event_id#0, city#1, skew_key#2, date#3]\n+- *(5) SortMergeJoin [event_id#0], [event_id#8], Inner\n   :- *(2) Sort [event_id#0 ASC NULLS FIRST], false, 0\n   :  +- Exchange hashpartitioning(event_id#0, 200)\n   :     +- *(1) Project [event_id#0, city#1, skew_key#2, date#3]\n   :        +- *(1) Filter isnotnull(event_id#0)\n   :           +- *(1) FileScan parquet hw_4.events_full[event_id#0,city#1,skew_key#2,date#3] Batched: true, Format: Parquet, Location: CatalogFileIndex[hdfs://10.4.14.1:8020/apps/hive/warehouse/hw_4.db/events_full], PartitionCount: 15, PartitionFilters: [], PushedFilters: [IsNotNull(event_id)], ReadSchema: struct<event_id:string,city:string,skew_key:string>\n   +- *(4) Sort [event_id#8 ASC NULLS FIRST], false, 0\n      +- Exchange hashpartitioning(event_id#8, 200)\n         +- *(3) Project [event_id#8]\n            +- *(3) Filter isnotnull(event_id#8)\n               +- *(3) FileScan parquet hw_4.sample[event_id#8] Batched: true, Format: Parquet, Location: InMemoryFileIndex[hdfs://10.4.14.1:8020/apps/hive/warehouse/hw_4.db/sample], PartitionFilters: [], PushedFilters: [IsNotNull(event_id)], ReadSchema: struct<event_id:string>\n"}]},"apps":[],"jobName":"paragraph_1638132493570_619662085","id":"20211128-234813_1868372866","dateCreated":"2021-11-28T23:48:13+0300","dateStarted":"2021-11-28T23:58:37+0300","dateFinished":"2021-11-28T23:58:37+0300","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:87"},{"text":"%python\n\n\"\"\"\nГлавное что стоит отметить - при оптимизации соединения с помощью broadcast мы получаем всего 3 stage (а не 4 как при отлкюченном), а так же\nвремя выполнения запроса сильно уменьшается:\n\n~ 5 минут с оптимизацией\n> 20 минут (20,5 + нескольколько миллисекунд) без оптимизации + соединение неоптимальным запросом (SortMergeJoin вместо BroadcastHashJoin)\n\n\n\"\"\"\n","user":"smykov","dateUpdated":"2021-11-28T23:59:06+0300","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python","editorHide":false,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"'\\n\\xd0\\x93\\xd0\\xbb\\xd0\\xb0\\xd0\\xb2\\xd0\\xbd\\xd0\\xbe\\xd0\\xb5 \\xd1\\x87\\xd1\\x82\\xd0\\xbe \\xd1\\x81\\xd1\\x82\\xd0\\xbe\\xd0\\xb8\\xd1\\x82 \\xd0\\xbe\\xd1\\x82\\xd0\\xbc\\xd0\\xb5\\xd1\\x82\\xd0\\xb8\\xd1\\x82\\xd1\\x8c - \\xd0\\xbf\\xd1\\x80\\xd0\\xb8 \\xd0\\xbe\\xd0\\xbf\\xd1\\x82\\xd0\\xb8\\xd0\\xbc\\xd0\\xb8\\xd0\\xb7\\xd0\\xb0\\xd1\\x86\\xd0\\xb8\\xd0\\xb8 \\xd1\\x81\\xd0\\xbe\\xd0\\xb5\\xd0\\xb4\\xd0\\xb8\\xd0\\xbd\\xd0\\xb5\\xd0\\xbd\\xd0\\xb8\\xd1\\x8f \\xd1\\x81 \\xd0\\xbf\\xd0\\xbe\\xd0\\xbc\\xd0\\xbe\\xd1\\x89\\xd1\\x8c\\xd1\\x8e broadcast \\xd0\\xbc\\xd1\\x8b \\xd0\\xbf\\xd0\\xbe\\xd0\\xbb\\xd1\\x83\\xd1\\x87\\xd0\\xb0\\xd0\\xb5\\xd0\\xbc \\xd0\\xb2\\xd1\\x81\\xd0\\xb5\\xd0\\xb3\\xd0\\xbe 3 stage (\\xd0\\xb0 \\xd0\\xbd\\xd0\\xb5 4 \\xd0\\xba\\xd0\\xb0\\xd0\\xba \\xd0\\xbf\\xd1\\x80\\xd0\\xb8 \\xd0\\xbe\\xd1\\x82\\xd0\\xbb\\xd0\\xba\\xd1\\x8e\\xd1\\x87\\xd0\\xb5\\xd0\\xbd\\xd0\\xbd\\xd0\\xbe\\xd0\\xbc), \\xd0\\xb0 \\xd1\\x82\\xd0\\xb0\\xd0\\xba \\xd0\\xb6\\xd0\\xb5\\n\\xd0\\xb2\\xd1\\x80\\xd0\\xb5\\xd0\\xbc\\xd1\\x8f \\xd0\\xb2\\xd1\\x8b\\xd0\\xbf\\xd0\\xbe\\xd0\\xbb\\xd0\\xbd\\xd0\\xb5\\xd0\\xbd\\xd0\\xb8\\xd1\\x8f \\xd0\\xb7\\xd0\\xb0\\xd0\\xbf\\xd1\\x80\\xd0\\xbe\\xd1\\x81\\xd0\\xb0 \\xd1\\x81\\xd0\\xb8\\xd0\\xbb\\xd1\\x8c\\xd0\\xbd\\xd0\\xbe \\xd1\\x83\\xd0\\xbc\\xd0\\xb5\\xd0\\xbd\\xd1\\x8c\\xd1\\x88\\xd0\\xb0\\xd0\\xb5\\xd1\\x82\\xd1\\x81\\xd1\\x8f:\\n~ 5 \\xd0\\xbc\\xd0\\xb8\\xd0\\xbd\\xd1\\x83\\xd1\\x82 \\xd1\\x81 \\xd0\\xbe\\xd0\\xbf\\xd1\\x82\\xd0\\xb8\\xd0\\xbc\\xd0\\xb8\\xd0\\xb7\\xd0\\xb0\\xd1\\x86\\xd0\\xb8\\xd0\\xb5\\xd0\\xb9\\n> 20 \\xd0\\xbc\\xd0\\xb8\\xd0\\xbd\\xd1\\x83\\xd1\\x82 (20,5 + \\xd0\\xbd\\xd0\\xb5\\xd1\\x81\\xd0\\xba\\xd0\\xbe\\xd0\\xbb\\xd1\\x8c\\xd0\\xba\\xd0\\xbe\\xd0\\xbb\\xd1\\x8c\\xd0\\xba\\xd0\\xbe \\xd0\\xbc\\xd0\\xb8\\xd0\\xbb\\xd0\\xbb\\xd0\\xb8\\xd1\\x81\\xd0\\xb5\\xd0\\xba\\xd1\\x83\\xd0\\xbd\\xd0\\xb4) \\xd0\\xb1\\xd0\\xb5\\xd0\\xb7 \\xd0\\xbe\\xd0\\xbf\\xd1\\x82\\xd0\\xb8\\xd0\\xbc\\xd0\\xb8\\xd0\\xb7\\xd0\\xb0\\xd1\\x86\\xd0\\xb8\\xd0\\xb8 + \\xd1\\x81\\xd0\\xbe\\xd0\\xb5\\xd0\\xb4\\xd0\\xb8\\xd0\\xbd\\xd0\\xb5\\xd0\\xbd\\xd0\\xb8\\xd0\\xb5 \\xd0\\xbd\\xd0\\xb5\\xd0\\xbe\\xd0\\xbf\\xd1\\x82\\xd0\\xb8\\xd0\\xbc\\xd0\\xb0\\xd0\\xbb\\xd1\\x8c\\xd0\\xbd\\xd1\\x8b\\xd0\\xbc \\xd0\\xb7\\xd0\\xb0\\xd0\\xbf\\xd1\\x80\\xd0\\xbe\\xd1\\x81\\xd0\\xbe\\xd0\\xbc (SortMergeJoin \\xd0\\xb2\\xd0\\xbc\\xd0\\xb5\\xd1\\x81\\xd1\\x82\\xd0\\xbe BroadcastHashJoin)\\n'\n"}]},"apps":[],"jobName":"paragraph_1638131457856_1386422910","id":"20211128-233057_558654412","dateCreated":"2021-11-28T23:30:57+0300","dateStarted":"2021-11-28T23:59:06+0300","dateFinished":"2021-11-28T23:59:09+0300","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:88"},{"title":"Вернуть настройку к исходной","text":"spark.conf.set(\"spark.sql.autoBroadcastJoinThreshold\", \"26214400\")","user":"smykov","dateUpdated":"2021-11-28T23:30:50+0300","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true,"editorHide":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1637862423473_1967850599","id":"20201127-230625_1272901030","dateCreated":"2021-11-25T20:47:03+0300","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:89"},{"text":"spark.sql(\"clear cache\")","user":"smykov","dateUpdated":"2021-11-25T20:47:03+0300","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res77: org.apache.spark.sql.DataFrame = []\n"}]},"apps":[],"jobName":"paragraph_1637862423474_-2027105241","id":"20201128-155645_947820002","dateCreated":"2021-11-25T20:47:03+0300","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:90"},{"title":"Задание 4","text":"%md\n.\n.\n.\n\nВ процессе обработки данных может возникнуть перекос объёма партиций по количеству данных (data skew). В таком случае время выполнения запроса может существенно увеличиться, так как данные распределятся по исполнителям неравномерно. В следующем параграфе происходит инициализация датафрейма, этот параграф нужно выполнить, изменять код нельзя. В задании нужно работать с инициализированным датафреймом.\n\nДатафрейм разделен на 30 партиций по ключу city, который имеет сильно  неравномерное распределение.","user":"smykov","dateUpdated":"2021-11-25T20:47:03+0300","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<p>.\n<br  />.\n<br  />.</p>\n<p>В процессе обработки данных может возникнуть перекос объёма партиций по количеству данных (data skew). В таком случае время выполнения запроса может существенно увеличиться, так как данные распределятся по исполнителям неравномерно. В следующем параграфе происходит инициализация датафрейма, этот параграф нужно выполнить, изменять код нельзя. В задании нужно работать с инициализированным датафреймом.</p>\n<p>Датафрейм разделен на 30 партиций по ключу city, который имеет сильно  неравномерное распределение.</p>\n"}]},"apps":[],"jobName":"paragraph_1637862423475_-2026688899","id":"20201128-163357_1545019956","dateCreated":"2021-11-25T20:47:03+0300","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:91"},{"title":"нужно выполнить, изменять код нельзя","text":"%pyspark \n\nskew_df = spark.table(\"hw_4.events_full\")\\\n.where(\"date = '2020-11-01'\")\\\n.repartition(30, col(\"city\"))\\\n.cache()\n\nskew_df.count()","user":"smykov","dateUpdated":"2021-11-29T01:31:28+0300","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"10000000\n"}]},"apps":[],"jobName":"paragraph_1637862423476_1232932357","id":"20201128-162744_575252973","dateCreated":"2021-11-25T20:47:03+0300","dateStarted":"2021-11-29T01:31:28+0300","dateFinished":"2021-11-29T01:32:01+0300","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:92"},{"text":"%pyspark\nsc.applicationId","user":"smykov","dateUpdated":"2021-11-28T23:59:39+0300","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true,"editorHide":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"u'application_1637409254228_0436'\n"}]},"apps":[],"jobName":"paragraph_1637862423476_764781496","id":"20211125-203645_140241983","dateCreated":"2021-11-25T20:47:03+0300","dateStarted":"2021-11-28T23:59:39+0300","dateFinished":"2021-11-28T23:59:39+0300","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:93"},{"title":"4.1. Наблюдение проблемы","text":"%md\n.\n.\n.\n\nПосчитать количество event_count различных событий event_id , содержащихся в skew_df с группировкой по городам. Результат упорядочить по event_count.\n\nВ spark ui в разделе jobs выбрать последнюю, в ней зайти в stage, состоящую из 30 тасков (из такого количества партиций состоит skew_df). На странице стейджа нажать кнопку Event Timeline и увидеть время выполнения тасков по экзекьюторам. Одному из них выпала партиция с существенно большим количеством данных. Остальные экзекьюторы в это время бездействуют -- это и является проблемой, которую предлагается решить далее.","user":"smykov","dateUpdated":"2021-11-25T20:49:24+0300","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<p>.\n<br  />.\n<br  />.</p>\n<p>Посчитать количество event_count различных событий event_id , содержащихся в skew_df с группировкой по городам. Результат упорядочить по event_count.</p>\n<p>В spark ui в разделе jobs выбрать последнюю, в ней зайти в stage, состоящую из 30 тасков (из такого количества партиций состоит skew_df). На странице стейджа нажать кнопку Event Timeline и увидеть время выполнения тасков по экзекьюторам. Одному из них выпала партиция с существенно большим количеством данных. Остальные экзекьюторы в это время бездействуют &ndash; это и является проблемой, которую предлагается решить далее.</p>\n"}]},"apps":[],"jobName":"paragraph_1637862423477_969165665","id":"20201128-164139_1371291032","dateCreated":"2021-11-25T20:47:03+0300","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:94"},{"text":"%pyspark\n\nskew_df.printSchema()","user":"smykov","dateUpdated":"2021-11-29T00:00:34+0300","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"root\n |-- event_id: string (nullable = true)\n |-- city: string (nullable = true)\n |-- skew_key: string (nullable = true)\n |-- date: string (nullable = true)\n\n"}]},"apps":[],"jobName":"paragraph_1638129849392_-841964751","id":"20211128-230409_1036999119","dateCreated":"2021-11-28T23:04:09+0300","dateStarted":"2021-11-29T00:00:12+0300","dateFinished":"2021-11-29T00:00:12+0300","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:95"},{"text":"%pyspark\n\nskew_df\\\n.groupBy(col(\"city\"))\\\n.agg(\n    f.count(col(\"event_id\")).alias(\"event_count\")\n   )\\\n.orderBy(\"event_count\", ascending=False)\\\n.show(truncate=False)\n\n","user":"smykov","dateUpdated":"2021-11-29T00:10:49+0300","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+-------------+-----------+\n|city         |event_count|\n+-------------+-----------+\n|BIG_CITY     |8999083    |\n|SMALL_CITY_82|10250      |\n|SMALL_CITY_80|10245      |\n|SMALL_CITY_93|10223      |\n|SMALL_CITY_6 |10223      |\n|SMALL_CITY_90|10209      |\n|SMALL_CITY_76|10190      |\n|SMALL_CITY_68|10187      |\n|SMALL_CITY_17|10172      |\n|SMALL_CITY_77|10167      |\n|SMALL_CITY_4 |10166      |\n|SMALL_CITY_57|10164      |\n|SMALL_CITY_2 |10160      |\n|SMALL_CITY_8 |10153      |\n|SMALL_CITY_5 |10130      |\n|SMALL_CITY_18|10129      |\n|SMALL_CITY_45|10129      |\n|SMALL_CITY_9 |10123      |\n|SMALL_CITY_29|10123      |\n|SMALL_CITY_11|10102      |\n+-------------+-----------+\nonly showing top 20 rows\n\n"}]},"apps":[],"jobName":"paragraph_1638133215527_696785155","id":"20211129-000015_1360687771","dateCreated":"2021-11-29T00:00:15+0300","dateStarted":"2021-11-29T00:08:53+0300","dateFinished":"2021-11-29T00:08:57+0300","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:96"},{"text":"%python\n\n\"\"\"\nПроблема видна невооруженным глазом (значение Max):\n\n\nSummary Metrics for 30 Completed Tasks\nMetric\t    Min\t     25th percentile\tMedian\t         75th percentile\tMax\nDuration\t8 ms\t 19 ms\t            23 ms\t         32 ms\t            2 s\nGC Time\t    0 ms\t 0 ms\t            0 ms\t         0 ms               82 ms\nInput Size / Records\t0.0 B / 0\t2.7 MB / 3\t4.0 MB / 4\t6.5 MB / 5\t587.9 MB / 902\n\"\"\"","user":"smykov","dateUpdated":"2021-11-29T00:12:13+0300","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1638133849269_-721891864","id":"20211129-001049_470285025","dateCreated":"2021-11-29T00:10:49+0300","status":"READY","progressUpdateIntervalMs":500,"$$hashKey":"object:97"},{"title":"4.2. repartition","text":"%md\n.\n.\n.\n\nодин из способов решения проблемы агрегации по неравномерно распределенному ключу является предварительное перемешивание данных. Его можно сделать с помощью метода repartition(p_num), где p_num -- количество партиций, на которые будет перемешан исходный датафрейм","user":"smykov","dateUpdated":"2021-11-29T00:47:58+0300","config":{"tableHide":true,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<p>.\n<br  />.\n<br  />.</p>\n<p>один из способов решения проблемы агрегации по неравномерно распределенному ключу является предварительное перемешивание данных. Его можно сделать с помощью метода repartition(p_num), где p_num &ndash; количество партиций, на которые будет перемешан исходный датафрейм</p>\n"}]},"apps":[],"jobName":"paragraph_1637862423478_1962755919","id":"20201128-164814_1641460265","dateCreated":"2021-11-25T20:47:03+0300","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:98"},{"text":"%pyspark\n\n\nbalanced_df = skew_df.repartition(10)\n\nprint(balanced_df.rdd.getNumPartitions())\n\n","user":"smykov","dateUpdated":"2021-11-29T01:11:11+0300","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"10\n"}]},"apps":[],"jobName":"paragraph_1638135362762_1528293349","id":"20211129-003602_2077580556","dateCreated":"2021-11-29T00:36:02+0300","dateStarted":"2021-11-29T01:11:39+0300","dateFinished":"2021-11-29T01:11:39+0300","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:99"},{"title":"4.3. Key Salting","text":"%md\n.\n.\n.\nДругой способ исправить неравномерность по ключу -- создание синтетического ключа с равномерным распределением. В нашем случае неравномерность исходит от единственного значения city='BIG_CITY', которое часто повторяется в данных и при группировке попадает к одному экзекьютору. В таком случае лучше провести группировку в два этапа по синтетическому ключу CITY_SALT, который принимает значение BIG_CITY_rand (rand -- случайное целое число) для популярного значения BIG_CITY и CITY для остальных значений. На втором этапе восстанавливаем значения CITY и проводим повторную агрегацию, которая не занимает времени, потому что проводится по существенно меньшего размера данным. \n\nТакая же техника применима и к джойнам по неравномерному ключу, см, например https://itnext.io/handling-data-skew-in-apache-spark-9f56343e58e8\n\nЧто нужно реализовать:\n* добавить синтетический ключ\n* группировка по синтетическому ключу\n* восстановление исходного значения\n* группировка по исходной колонке","user":"smykov","dateUpdated":"2021-11-26T17:16:11+0300","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<p>.\n<br  />.\n<br  />.\n<br  />Другой способ исправить неравномерность по ключу &ndash; создание синтетического ключа с равномерным распределением. В нашем случае неравномерность исходит от единственного значения city='BIG_CITY', которое часто повторяется в данных и при группировке попадает к одному экзекьютору. В таком случае лучше провести группировку в два этапа по синтетическому ключу CITY_SALT, который принимает значение BIG_CITY_rand (rand &ndash; случайное целое число) для популярного значения BIG_CITY и CITY для остальных значений. На втором этапе восстанавливаем значения CITY и проводим повторную агрегацию, которая не занимает времени, потому что проводится по существенно меньшего размера данным.</p>\n<p>Такая же техника применима и к джойнам по неравномерному ключу, см, например https://itnext.io/handling-data-skew-in-apache-spark-9f56343e58e8</p>\n<p>Что нужно реализовать:</p>\n<ul>\n<li>добавить синтетический ключ</li>\n<li>группировка по синтетическому ключу</li>\n<li>восстановление исходного значения</li>\n<li>группировка по исходной колонке</li>\n</ul>\n"}]},"apps":[],"jobName":"paragraph_1637862423479_170562695","id":"20201128-173534_1924644474","dateCreated":"2021-11-25T20:47:03+0300","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:100"},{"text":"%pyspark\n\n\ndf_salt = skew_df\\\n.withColumn(\n            \"city_salt\", f.when(\n                                col(\"city\") == \"BIG_CITY\", \n                                f.concat(\n                                         col(\"city\"), f.lit(\"_\"), f.lit(f.round(f.rand(100) * 100, 0))\n                                        )\n                               )\n                          .otherwise(col(\"city\"))\n            )\n\ndf_salt.where(col('city').like(\"%BIG_CITY%\")).show()\n","user":"smykov","dateUpdated":"2021-11-29T01:31:53+0300","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+--------------------+--------+---------+----------+-------------+\n|            event_id|    city| skew_key|      date|    city_salt|\n+--------------------+--------+---------+----------+-------------+\n|160f57d8f91c903a4...|BIG_CITY|big_event|2020-11-01|BIG_CITY_14.0|\n|c60620a8b3006a95f...|BIG_CITY|big_event|2020-11-01|BIG_CITY_61.0|\n|03566e088ffcb4ed1...|BIG_CITY|big_event|2020-11-01|BIG_CITY_12.0|\n|63f8d03bd78d54065...|BIG_CITY|big_event|2020-11-01| BIG_CITY_2.0|\n|114ff1c71ffc035ac...|BIG_CITY|big_event|2020-11-01|BIG_CITY_61.0|\n|dd086b482eaab671f...|BIG_CITY|big_event|2020-11-01|BIG_CITY_52.0|\n|102c4804de1fc203c...|BIG_CITY|big_event|2020-11-01|BIG_CITY_97.0|\n|757ffed568e15361c...|BIG_CITY|big_event|2020-11-01|BIG_CITY_82.0|\n|695481ba15aa73833...|BIG_CITY|big_event|2020-11-01|BIG_CITY_62.0|\n|117ee9d724aeafe62...|BIG_CITY|big_event|2020-11-01|BIG_CITY_39.0|\n|8a378e72fe6db048b...|BIG_CITY|big_event|2020-11-01|BIG_CITY_30.0|\n|bb052cd55b63bffea...|BIG_CITY|big_event|2020-11-01|BIG_CITY_81.0|\n|6ce2af39a50aa2d9a...|BIG_CITY|big_event|2020-11-01|BIG_CITY_19.0|\n|79bd9ccc5bb1be2ae...|BIG_CITY|big_event|2020-11-01|BIG_CITY_70.0|\n|84de9e33411c59afb...|BIG_CITY|big_event|2020-11-01|BIG_CITY_38.0|\n|eb867e9b7f12f584d...|BIG_CITY|big_event|2020-11-01|BIG_CITY_43.0|\n|955c37657a67291b0...|BIG_CITY|big_event|2020-11-01|BIG_CITY_23.0|\n|a2cde87567c70eaad...|BIG_CITY|big_event|2020-11-01|BIG_CITY_81.0|\n|ddf604a144c2036f6...|BIG_CITY|big_event|2020-11-01|BIG_CITY_91.0|\n|9130ed5d22eded66a...|BIG_CITY|big_event|2020-11-01|BIG_CITY_36.0|\n+--------------------+--------+---------+----------+-------------+\nonly showing top 20 rows\n\n"}]},"apps":[],"jobName":"paragraph_1638136588255_-987701893","id":"20211129-005628_2023934453","dateCreated":"2021-11-29T00:56:28+0300","dateStarted":"2021-11-29T01:32:01+0300","dateFinished":"2021-11-29T01:32:17+0300","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:101"},{"text":"%pyspark\n\ndf_salt = skew_df\\\n.withColumn(\n            \"city_salt\", f.when(\n                                col(\"city\") == \"BIG_CITY\", \n                                f.concat(\n                                         col(\"city\"), f.lit(\"_\"), f.lit(f.round(f.rand(100) * 100, 0))\n                                        )\n                               )\n                          .otherwise(col(\"city\"))\n            )\\\n.groupBy(col(\"city_salt\"))\\\n.agg(\n    f.count(col(\"event_id\")).alias(\"event_count\")\n   )\\\n.withColumn(\n            \"city_clean\", f.when(\n                           col('city_salt').like(\"BIG%\"), \"BIG_CITY\"\n                           #col('city_salt').startsWith(\"BIG_CITY\"), \"BIG_CITY\"\n                          )\n                           .otherwise(col(\"city_salt\"))\n           )\\\n.groupBy(col(\"city_clean\"))\\\n.agg(\n    f.sum(col(\"event_count\")).alias(\"event_count\")\n   )\\\n.orderBy(\"event_count\", ascending=False)\\\n.show(truncate=False)","user":"smykov","dateUpdated":"2021-11-29T02:34:47+0300","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+-------------+-----------+\n|city_clean   |event_count|\n+-------------+-----------+\n|BIG_CITY     |8999083    |\n|SMALL_CITY_82|10250      |\n|SMALL_CITY_80|10245      |\n|SMALL_CITY_6 |10223      |\n|SMALL_CITY_93|10223      |\n|SMALL_CITY_90|10209      |\n|SMALL_CITY_76|10190      |\n|SMALL_CITY_68|10187      |\n|SMALL_CITY_17|10172      |\n|SMALL_CITY_77|10167      |\n|SMALL_CITY_4 |10166      |\n|SMALL_CITY_57|10164      |\n|SMALL_CITY_2 |10160      |\n|SMALL_CITY_8 |10153      |\n|SMALL_CITY_5 |10130      |\n|SMALL_CITY_45|10129      |\n|SMALL_CITY_18|10129      |\n|SMALL_CITY_9 |10123      |\n|SMALL_CITY_29|10123      |\n|SMALL_CITY_11|10102      |\n+-------------+-----------+\nonly showing top 20 rows\n\n"}]},"apps":[],"jobName":"paragraph_1638137545534_-971461201","id":"20211129-011225_1956747997","dateCreated":"2021-11-29T01:12:25+0300","dateStarted":"2021-11-29T02:21:54+0300","dateFinished":"2021-11-29T02:22:06+0300","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:102"},{"text":"spark.stop","user":"smykov","dateUpdated":"2021-11-25T20:47:03+0300","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1637862423480_844723669","id":"20201128-174934_1428813475","dateCreated":"2021-11-25T20:47:03+0300","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:103"},{"user":"smykov","dateUpdated":"2021-11-25T20:47:03+0300","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1637862423481_-1408417350","id":"20201128-175938_2140404686","dateCreated":"2021-11-25T20:47:03+0300","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:104"}],"name":"it_3/smykov/4 hw 1","id":"2GMDRADSK","noteParams":{},"noteForms":{},"angularObjects":{"md:shared_process":[],"sparkLocal:shared_process":[],"python:shared_process":[],"sh:shared_process":[],"spark::2GMDRADSK":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}